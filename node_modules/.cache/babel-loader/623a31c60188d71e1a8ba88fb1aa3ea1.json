{"ast":null,"code":"function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n  * Bootstrap v5.3.8 (https://getbootstrap.com/)\n  * Copyright 2011-2025 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@popperjs/core')) : typeof define === 'function' && define.amd ? define(['@popperjs/core'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.bootstrap = factory(global.Popper));\n})(this, function (Popper) {\n  'use strict';\n\n  var _KEY_TO_DIRECTION;\n\n  function _interopNamespaceDefault(e) {\n    var n = Object.create(null, _defineProperty({}, Symbol.toStringTag, {\n      value: 'Module'\n    }));\n\n    if (e) {\n      var _loop = function _loop(k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function get() {\n              return e[k];\n            }\n          });\n        }\n      };\n\n      for (var k in e) {\n        _loop(k);\n      }\n    }\n\n    n.default = e;\n    return Object.freeze(n);\n  }\n\n  var Popper__namespace = /*#__PURE__*/_interopNamespaceDefault(Popper);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var elementMap = new Map();\n  var Data = {\n    set: function set(element, key, instance) {\n      if (!elementMap.has(element)) {\n        elementMap.set(element, new Map());\n      }\n\n      var instanceMap = elementMap.get(element); // make it clear we only want one instance per element\n      // can be removed later when multiple key/instances are fine to be used\n\n      if (!instanceMap.has(key) && instanceMap.size !== 0) {\n        // eslint-disable-next-line no-console\n        console.error(\"Bootstrap doesn't allow more than one instance per element. Bound instance: \".concat(Array.from(instanceMap.keys())[0], \".\"));\n        return;\n      }\n\n      instanceMap.set(key, instance);\n    },\n    get: function get(element, key) {\n      if (elementMap.has(element)) {\n        return elementMap.get(element).get(key) || null;\n      }\n\n      return null;\n    },\n    remove: function remove(element, key) {\n      if (!elementMap.has(element)) {\n        return;\n      }\n\n      var instanceMap = elementMap.get(element);\n      instanceMap.delete(key); // free up element references if there are no instances left for an element\n\n      if (instanceMap.size === 0) {\n        elementMap.delete(element);\n      }\n    }\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var MAX_UID = 1000000;\n  var MILLISECONDS_MULTIPLIER = 1000;\n  var TRANSITION_END = 'transitionend';\n  /**\n   * Properly escape IDs selectors to handle weird IDs\n   * @param {string} selector\n   * @returns {string}\n   */\n\n  var parseSelector = function parseSelector(selector) {\n    if (selector && window.CSS && window.CSS.escape) {\n      // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n      selector = selector.replace(/#([^\\s\"#']+)/g, function (match, id) {\n        return \"#\".concat(CSS.escape(id));\n      });\n    }\n\n    return selector;\n  }; // Shout-out Angus Croll (https://goo.gl/pxwQGp)\n\n\n  var toType = function toType(object) {\n    if (object === null || object === undefined) {\n      return \"\".concat(object);\n    }\n\n    return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n  /**\n   * Public Util API\n   */\n\n\n  var getUID = function getUID(prefix) {\n    do {\n      prefix += Math.floor(Math.random() * MAX_UID);\n    } while (document.getElementById(prefix));\n\n    return prefix;\n  };\n\n  var getTransitionDurationFromElement = function getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    var _window$getComputedSt = window.getComputedStyle(element),\n        transitionDuration = _window$getComputedSt.transitionDuration,\n        transitionDelay = _window$getComputedSt.transitionDelay;\n\n    var floatTransitionDuration = Number.parseFloat(transitionDuration);\n    var floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  var triggerTransitionEnd = function triggerTransitionEnd(element) {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  var isElement = function isElement(object) {\n    if (!object || _typeof(object) !== 'object') {\n      return false;\n    }\n\n    if (typeof object.jquery !== 'undefined') {\n      object = object[0];\n    }\n\n    return typeof object.nodeType !== 'undefined';\n  };\n\n  var getElement = function getElement(object) {\n    // it's a jQuery object or a node element\n    if (isElement(object)) {\n      return object.jquery ? object[0] : object;\n    }\n\n    if (typeof object === 'string' && object.length > 0) {\n      return document.querySelector(parseSelector(object));\n    }\n\n    return null;\n  };\n\n  var isVisible = function isVisible(element) {\n    if (!isElement(element) || element.getClientRects().length === 0) {\n      return false;\n    }\n\n    var elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'; // Handle `details` element as its content may falsie appear visible when it is closed\n\n    var closedDetails = element.closest('details:not([open])');\n\n    if (!closedDetails) {\n      return elementIsVisible;\n    }\n\n    if (closedDetails !== element) {\n      var summary = element.closest('summary');\n\n      if (summary && summary.parentNode !== closedDetails) {\n        return false;\n      }\n\n      if (summary === null) {\n        return false;\n      }\n    }\n\n    return elementIsVisible;\n  };\n\n  var isDisabled = function isDisabled(element) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n\n    if (element.classList.contains('disabled')) {\n      return true;\n    }\n\n    if (typeof element.disabled !== 'undefined') {\n      return element.disabled;\n    }\n\n    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n  };\n\n  var findShadowRoot = function findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null;\n    } // Can find the shadow root otherwise it'll return the document\n\n\n    if (typeof element.getRootNode === 'function') {\n      var root = element.getRootNode();\n      return root instanceof ShadowRoot ? root : null;\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element;\n    } // when we don't find a shadow root\n\n\n    if (!element.parentNode) {\n      return null;\n    }\n\n    return findShadowRoot(element.parentNode);\n  };\n\n  var noop = function noop() {};\n  /**\n   * Trick to restart an element's animation\n   *\n   * @param {HTMLElement} element\n   * @return void\n   *\n   * @see https://www.harrytheo.com/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n   */\n\n\n  var reflow = function reflow(element) {\n    element.offsetHeight; // eslint-disable-line no-unused-expressions\n  };\n\n  var getjQuery = function getjQuery() {\n    if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return window.jQuery;\n    }\n\n    return null;\n  };\n\n  var DOMContentLoadedCallbacks = [];\n\n  var onDOMContentLoaded = function onDOMContentLoaded(callback) {\n    if (document.readyState === 'loading') {\n      // add listener on the first call when the document is in loading state\n      if (!DOMContentLoadedCallbacks.length) {\n        document.addEventListener('DOMContentLoaded', function () {\n          var _iterator = _createForOfIteratorHelper(DOMContentLoadedCallbacks),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _callback = _step.value;\n\n              _callback();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      }\n\n      DOMContentLoadedCallbacks.push(callback);\n    } else {\n      callback();\n    }\n  };\n\n  var isRTL = function isRTL() {\n    return document.documentElement.dir === 'rtl';\n  };\n\n  var defineJQueryPlugin = function defineJQueryPlugin(plugin) {\n    onDOMContentLoaded(function () {\n      var $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        var name = plugin.NAME;\n        var JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = function () {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  var execute = function execute(possibleCallback) {\n    var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : possibleCallback;\n    return typeof possibleCallback === 'function' ? possibleCallback.call.apply(possibleCallback, _toConsumableArray(args)) : defaultValue;\n  };\n\n  var executeAfterTransition = function executeAfterTransition(callback, transitionElement) {\n    var waitForTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (!waitForTransition) {\n      execute(callback);\n      return;\n    }\n\n    var durationPadding = 5;\n    var emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n    var called = false;\n\n    var handler = function handler(_ref) {\n      var target = _ref.target;\n\n      if (target !== transitionElement) {\n        return;\n      }\n\n      called = true;\n      transitionElement.removeEventListener(TRANSITION_END, handler);\n      execute(callback);\n    };\n\n    transitionElement.addEventListener(TRANSITION_END, handler);\n    setTimeout(function () {\n      if (!called) {\n        triggerTransitionEnd(transitionElement);\n      }\n    }, emulatedDuration);\n  };\n  /**\n   * Return the previous/next element of a list.\n   *\n   * @param {array} list    The list of elements\n   * @param activeElement   The active element\n   * @param shouldGetNext   Choose to get next or previous element\n   * @param isCycleAllowed\n   * @return {Element|elem} The proper element\n   */\n\n\n  var getNextActiveElement = function getNextActiveElement(list, activeElement, shouldGetNext, isCycleAllowed) {\n    var listLength = list.length;\n    var index = list.indexOf(activeElement); // if the element does not exist in the list return an element\n    // depending on the direction and if cycle is allowed\n\n    if (index === -1) {\n      return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n    }\n\n    index += shouldGetNext ? 1 : -1;\n\n    if (isCycleAllowed) {\n      index = (index + listLength) % listLength;\n    }\n\n    return list[Math.max(0, Math.min(index, listLength - 1))];\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  var stripNameRegex = /\\..*/;\n  var stripUidRegex = /::\\d+$/;\n  var eventRegistry = {}; // Events storage\n\n  var uidEvent = 1;\n  var customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  var nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && \"\".concat(uid, \"::\").concat(uidEvent++) || element.uidEvent || uidEvent++;\n  }\n\n  function getElementEvents(element) {\n    var uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n\n      return fn.apply(element, [event]);\n    };\n  }\n\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      var domElements = element.querySelectorAll(selector);\n\n      for (var target = event.target; target && target !== this; target = target.parentNode) {\n        var _iterator2 = _createForOfIteratorHelper(domElements),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var domElement = _step2.value;\n\n            if (domElement !== target) {\n              continue;\n            }\n\n            hydrateObj(event, {\n              delegateTarget: target\n            });\n\n            if (handler.oneOff) {\n              EventHandler.off(element, event.type, selector, fn);\n            }\n\n            return fn.apply(target, [event]);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    };\n  }\n\n  function findHandler(events, callable) {\n    var delegationSelector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return Object.values(events).find(function (event) {\n      return event.callable === callable && event.delegationSelector === delegationSelector;\n    });\n  }\n\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    var isDelegated = typeof handler === 'string'; // TODO: tooltip passes `false` instead of selector, so we need to check\n\n    var callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    var typeEvent = getTypeEvent(originalTypeEvent);\n\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n\n    return [isDelegated, callable, typeEvent];\n  }\n\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    var _normalizeParameters = normalizeParameters(originalTypeEvent, handler, delegationFunction),\n        _normalizeParameters2 = _slicedToArray(_normalizeParameters, 3),\n        isDelegated = _normalizeParameters2[0],\n        callable = _normalizeParameters2[1],\n        typeEvent = _normalizeParameters2[2]; // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n\n\n    if (originalTypeEvent in customEvents) {\n      var wrapFunction = function wrapFunction(fn) {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n\n      callable = wrapFunction(callable);\n    }\n\n    var events = getElementEvents(element);\n    var handlers = events[typeEvent] || (events[typeEvent] = {});\n    var previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n\n    var uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    var fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    var fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n    if (!fn) {\n      return;\n    }\n\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    var storeElementEvent = events[typeEvent] || {};\n\n    for (var _i2 = 0, _Object$entries = Object.entries(storeElementEvent); _i2 < _Object$entries.length; _i2++) {\n      var _ref4 = _Object$entries[_i2];\n\n      var _ref3 = _slicedToArray(_ref4, 2);\n\n      var handlerKey = _ref3[0];\n      var event = _ref3[1];\n\n      if (handlerKey.includes(namespace)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n\n  var EventHandler = {\n    on: function on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n    one: function one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n    off: function off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n\n      var _normalizeParameters3 = normalizeParameters(originalTypeEvent, handler, delegationFunction),\n          _normalizeParameters4 = _slicedToArray(_normalizeParameters3, 3),\n          isDelegated = _normalizeParameters4[0],\n          callable = _normalizeParameters4[1],\n          typeEvent = _normalizeParameters4[2];\n\n      var inNamespace = typeEvent !== originalTypeEvent;\n      var events = getElementEvents(element);\n      var storeElementEvent = events[typeEvent] || {};\n      var isNamespace = originalTypeEvent.startsWith('.');\n\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n\n      if (isNamespace) {\n        for (var _i3 = 0, _Object$keys = Object.keys(events); _i3 < _Object$keys.length; _i3++) {\n          var elementEvent = _Object$keys[_i3];\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n\n      for (var _i4 = 0, _Object$entries2 = Object.entries(storeElementEvent); _i4 < _Object$entries2.length; _i4++) {\n        var _ref7 = _Object$entries2[_i4];\n\n        var _ref6 = _slicedToArray(_ref7, 2);\n\n        var keyHandlers = _ref6[0];\n        var event = _ref6[1];\n        var handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n    trigger: function trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n\n      var $ = getjQuery();\n      var typeEvent = getTypeEvent(event);\n      var inNamespace = event !== typeEvent;\n      var jQueryEvent = null;\n      var bubbles = true;\n      var nativeDispatch = true;\n      var defaultPrevented = false;\n\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n\n      var evt = hydrateObj(new Event(event, {\n        bubbles: bubbles,\n        cancelable: true\n      }), args);\n\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n\n      return evt;\n    }\n  };\n\n  function hydrateObj(obj) {\n    var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _loop2 = function _loop2() {\n      var _ref8 = _Object$entries3[_i5];\n      _ref9 = _slicedToArray(_ref8, 2);\n      var key = _ref9[0];\n      var value = _ref9[1];\n\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n          get: function get() {\n            return value;\n          }\n        });\n      }\n    };\n\n    for (var _i5 = 0, _Object$entries3 = Object.entries(meta); _i5 < _Object$entries3.length; _i5++) {\n      var _ref9;\n\n      _loop2();\n    }\n\n    return obj;\n  }\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  function normalizeData(value) {\n    if (value === 'true') {\n      return true;\n    }\n\n    if (value === 'false') {\n      return false;\n    }\n\n    if (value === Number(value).toString()) {\n      return Number(value);\n    }\n\n    if (value === '' || value === 'null') {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    try {\n      return JSON.parse(decodeURIComponent(value));\n    } catch (_unused) {\n      return value;\n    }\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, function (chr) {\n      return \"-\".concat(chr.toLowerCase());\n    });\n  }\n\n  var Manipulator = {\n    setDataAttribute: function setDataAttribute(element, key, value) {\n      element.setAttribute(\"data-bs-\".concat(normalizeDataKey(key)), value);\n    },\n    removeDataAttribute: function removeDataAttribute(element, key) {\n      element.removeAttribute(\"data-bs-\".concat(normalizeDataKey(key)));\n    },\n    getDataAttributes: function getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      var attributes = {};\n      var bsKeys = Object.keys(element.dataset).filter(function (key) {\n        return key.startsWith('bs') && !key.startsWith('bsConfig');\n      });\n\n      var _iterator3 = _createForOfIteratorHelper(bsKeys),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var key = _step3.value;\n          var pureKey = key.replace(/^bs/, '');\n          pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1);\n          attributes[pureKey] = normalizeData(element.dataset[key]);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return attributes;\n    },\n    getDataAttribute: function getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(\"data-bs-\".concat(normalizeDataKey(key))));\n    }\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Class definition\n   */\n\n  var Config = /*#__PURE__*/function () {\n    function Config() {\n      _classCallCheck(this, Config);\n    }\n\n    _createClass(Config, [{\n      key: \"_getConfig\",\n      value: function _getConfig(config) {\n        config = this._mergeConfigObj(config);\n        config = this._configAfterMerge(config);\n\n        this._typeCheckConfig(config);\n\n        return config;\n      }\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        return config;\n      }\n    }, {\n      key: \"_mergeConfigObj\",\n      value: function _mergeConfigObj(config, element) {\n        var jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n        return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.constructor.Default), _typeof(jsonConfig) === 'object' ? jsonConfig : {}), isElement(element) ? Manipulator.getDataAttributes(element) : {}), _typeof(config) === 'object' ? config : {});\n      }\n    }, {\n      key: \"_typeCheckConfig\",\n      value: function _typeCheckConfig(config) {\n        var configTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.constructor.DefaultType;\n\n        for (var _i6 = 0, _Object$entries4 = Object.entries(configTypes); _i6 < _Object$entries4.length; _i6++) {\n          var _ref12 = _Object$entries4[_i6];\n\n          var _ref11 = _slicedToArray(_ref12, 2);\n\n          var property = _ref11[0];\n          var expectedTypes = _ref11[1];\n          var value = config[property];\n          var valueType = isElement(value) ? 'element' : toType(value);\n\n          if (!new RegExp(expectedTypes).test(valueType)) {\n            throw new TypeError(\"\".concat(this.constructor.NAME.toUpperCase(), \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\".\"));\n          }\n        }\n      }\n    }], [{\n      key: \"Default\",\n      get: // Getters\n      function get() {\n        return {};\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return {};\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        throw new Error('You have to implement the static method \"NAME\", for each component!');\n      }\n    }]);\n\n    return Config;\n  }();\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var VERSION = '5.3.8';\n  /**\n   * Class definition\n   */\n\n  var BaseComponent = /*#__PURE__*/function (_Config) {\n    _inherits(BaseComponent, _Config);\n\n    var _super = _createSuper(BaseComponent);\n\n    function BaseComponent(element, config) {\n      var _this;\n\n      _classCallCheck(this, BaseComponent);\n\n      _this = _super.call(this);\n      element = getElement(element);\n\n      if (!element) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      _this._element = element;\n      _this._config = _this._getConfig(config);\n      Data.set(_this._element, _this.constructor.DATA_KEY, _assertThisInitialized(_this));\n      return _this;\n    } // Public\n\n\n    _createClass(BaseComponent, [{\n      key: \"dispose\",\n      value: function dispose() {\n        Data.remove(this._element, this.constructor.DATA_KEY);\n        EventHandler.off(this._element, this.constructor.EVENT_KEY);\n\n        var _iterator4 = _createForOfIteratorHelper(Object.getOwnPropertyNames(this)),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var propertyName = _step4.value;\n            this[propertyName] = null;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      } // Private\n\n    }, {\n      key: \"_queueCallback\",\n      value: function _queueCallback(callback, element) {\n        var isAnimated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        executeAfterTransition(callback, element, isAnimated);\n      }\n    }, {\n      key: \"_getConfig\",\n      value: function _getConfig(config) {\n        config = this._mergeConfigObj(config, this._element);\n        config = this._configAfterMerge(config);\n\n        this._typeCheckConfig(config);\n\n        return config;\n      } // Static\n\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance(element) {\n        return Data.get(getElement(element), this.DATA_KEY);\n      }\n    }, {\n      key: \"getOrCreateInstance\",\n      value: function getOrCreateInstance(element) {\n        var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return this.getInstance(element) || new this(element, _typeof(config) === 'object' ? config : null);\n      }\n    }, {\n      key: \"VERSION\",\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: \"DATA_KEY\",\n      get: function get() {\n        return \"bs.\".concat(this.NAME);\n      }\n    }, {\n      key: \"EVENT_KEY\",\n      get: function get() {\n        return \".\".concat(this.DATA_KEY);\n      }\n    }, {\n      key: \"eventName\",\n      value: function eventName(name) {\n        return \"\".concat(name).concat(this.EVENT_KEY);\n      }\n    }]);\n\n    return BaseComponent;\n  }(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  var getSelector = function getSelector(element) {\n    var selector = element.getAttribute('data-bs-target');\n\n    if (!selector || selector === '#') {\n      var hrefAttribute = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n\n      if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n        return null;\n      } // Just in case some CMS puts out a full URL with the anchor appended\n\n\n      if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n        hrefAttribute = \"#\".concat(hrefAttribute.split('#')[1]);\n      }\n\n      selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n    }\n\n    return selector ? selector.split(',').map(function (sel) {\n      return parseSelector(sel);\n    }).join(',') : null;\n  };\n\n  var SelectorEngine = {\n    find: function find(selector) {\n      var _ref13;\n\n      var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return (_ref13 = []).concat.apply(_ref13, _toConsumableArray(Element.prototype.querySelectorAll.call(element, selector)));\n    },\n    findOne: function findOne(selector) {\n      var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return Element.prototype.querySelector.call(element, selector);\n    },\n    children: function children(element, selector) {\n      var _ref14;\n\n      return (_ref14 = []).concat.apply(_ref14, _toConsumableArray(element.children)).filter(function (child) {\n        return child.matches(selector);\n      });\n    },\n    parents: function parents(element, selector) {\n      var parents = [];\n      var ancestor = element.parentNode.closest(selector);\n\n      while (ancestor) {\n        parents.push(ancestor);\n        ancestor = ancestor.parentNode.closest(selector);\n      }\n\n      return parents;\n    },\n    prev: function prev(element, selector) {\n      var previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n    // TODO: this is now unused; remove later along with prev()\n    next: function next(element, selector) {\n      var next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    },\n    focusableChildren: function focusableChildren(element) {\n      var focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(function (selector) {\n        return \"\".concat(selector, \":not([tabindex^=\\\"-\\\"])\");\n      }).join(',');\n      return this.find(focusables, element).filter(function (el) {\n        return !isDisabled(el) && isVisible(el);\n      });\n    },\n    getSelectorFromElement: function getSelectorFromElement(element) {\n      var selector = getSelector(element);\n\n      if (selector) {\n        return SelectorEngine.findOne(selector) ? selector : null;\n      }\n\n      return null;\n    },\n    getElementFromSelector: function getElementFromSelector(element) {\n      var selector = getSelector(element);\n      return selector ? SelectorEngine.findOne(selector) : null;\n    },\n    getMultipleElementsFromSelector: function getMultipleElementsFromSelector(element) {\n      var selector = getSelector(element);\n      return selector ? SelectorEngine.find(selector) : [];\n    }\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/component-functions.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var enableDismissTrigger = function enableDismissTrigger(component) {\n    var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hide';\n    var clickEvent = \"click.dismiss\".concat(component.EVENT_KEY);\n    var name = component.NAME;\n    EventHandler.on(document, clickEvent, \"[data-bs-dismiss=\\\"\".concat(name, \"\\\"]\"), function (event) {\n      if (['A', 'AREA'].includes(this.tagName)) {\n        event.preventDefault();\n      }\n\n      if (isDisabled(this)) {\n        return;\n      }\n\n      var target = SelectorEngine.getElementFromSelector(this) || this.closest(\".\".concat(name));\n      var instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n\n      instance[method]();\n    });\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap alert.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$f = 'alert';\n  var DATA_KEY$a = 'bs.alert';\n  var EVENT_KEY$b = \".\".concat(DATA_KEY$a);\n  var EVENT_CLOSE = \"close\".concat(EVENT_KEY$b);\n  var EVENT_CLOSED = \"closed\".concat(EVENT_KEY$b);\n  var CLASS_NAME_FADE$5 = 'fade';\n  var CLASS_NAME_SHOW$8 = 'show';\n  /**\n   * Class definition\n   */\n\n  var Alert = /*#__PURE__*/function (_BaseComponent) {\n    _inherits(Alert, _BaseComponent);\n\n    var _super2 = _createSuper(Alert);\n\n    function Alert() {\n      _classCallCheck(this, Alert);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(Alert, [{\n      key: \"close\",\n      value: // Public\n      function close() {\n        var _this2 = this;\n\n        var closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);\n\n        if (closeEvent.defaultPrevented) {\n          return;\n        }\n\n        this._element.classList.remove(CLASS_NAME_SHOW$8);\n\n        var isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);\n\n        this._queueCallback(function () {\n          return _this2._destroyElement();\n        }, this._element, isAnimated);\n      } // Private\n\n    }, {\n      key: \"_destroyElement\",\n      value: function _destroyElement() {\n        this._element.remove();\n\n        EventHandler.trigger(this._element, EVENT_CLOSED);\n        this.dispose();\n      } // Static\n\n    }], [{\n      key: \"NAME\",\n      get: // Getters\n      function get() {\n        return NAME$f;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Alert.getOrCreateInstance(this);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config](this);\n        });\n      }\n    }]);\n\n    return Alert;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  enableDismissTrigger(Alert, 'close');\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Alert);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap button.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$e = 'button';\n  var DATA_KEY$9 = 'bs.button';\n  var EVENT_KEY$a = \".\".concat(DATA_KEY$9);\n  var DATA_API_KEY$6 = '.data-api';\n  var CLASS_NAME_ACTIVE$3 = 'active';\n  var SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle=\"button\"]';\n  var EVENT_CLICK_DATA_API$6 = \"click\".concat(EVENT_KEY$a).concat(DATA_API_KEY$6);\n  /**\n   * Class definition\n   */\n\n  var Button = /*#__PURE__*/function (_BaseComponent2) {\n    _inherits(Button, _BaseComponent2);\n\n    var _super3 = _createSuper(Button);\n\n    function Button() {\n      _classCallCheck(this, Button);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(Button, [{\n      key: \"toggle\",\n      value: // Public\n      function toggle() {\n        // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n        this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));\n      } // Static\n\n    }], [{\n      key: \"NAME\",\n      get: // Getters\n      function get() {\n        return NAME$e;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Button.getOrCreateInstance(this);\n\n          if (config === 'toggle') {\n            data[config]();\n          }\n        });\n      }\n    }]);\n\n    return Button;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, function (event) {\n    event.preventDefault();\n    var button = event.target.closest(SELECTOR_DATA_TOGGLE$5);\n    var data = Button.getOrCreateInstance(button);\n    data.toggle();\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Button);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/swipe.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$d = 'swipe';\n  var EVENT_KEY$9 = '.bs.swipe';\n  var EVENT_TOUCHSTART = \"touchstart\".concat(EVENT_KEY$9);\n  var EVENT_TOUCHMOVE = \"touchmove\".concat(EVENT_KEY$9);\n  var EVENT_TOUCHEND = \"touchend\".concat(EVENT_KEY$9);\n  var EVENT_POINTERDOWN = \"pointerdown\".concat(EVENT_KEY$9);\n  var EVENT_POINTERUP = \"pointerup\".concat(EVENT_KEY$9);\n  var POINTER_TYPE_TOUCH = 'touch';\n  var POINTER_TYPE_PEN = 'pen';\n  var CLASS_NAME_POINTER_EVENT = 'pointer-event';\n  var SWIPE_THRESHOLD = 40;\n  var Default$c = {\n    endCallback: null,\n    leftCallback: null,\n    rightCallback: null\n  };\n  var DefaultType$c = {\n    endCallback: '(function|null)',\n    leftCallback: '(function|null)',\n    rightCallback: '(function|null)'\n  };\n  /**\n   * Class definition\n   */\n\n  var Swipe = /*#__PURE__*/function (_Config2) {\n    _inherits(Swipe, _Config2);\n\n    var _super4 = _createSuper(Swipe);\n\n    function Swipe(element, config) {\n      var _this3;\n\n      _classCallCheck(this, Swipe);\n\n      _this3 = _super4.call(this);\n      _this3._element = element;\n\n      if (!element || !Swipe.isSupported()) {\n        return _possibleConstructorReturn(_this3);\n      }\n\n      _this3._config = _this3._getConfig(config);\n      _this3._deltaX = 0;\n      _this3._supportPointerEvents = Boolean(window.PointerEvent);\n\n      _this3._initEvents();\n\n      return _this3;\n    } // Getters\n\n\n    _createClass(Swipe, [{\n      key: \"dispose\",\n      value: // Public\n      function dispose() {\n        EventHandler.off(this._element, EVENT_KEY$9);\n      } // Private\n\n    }, {\n      key: \"_start\",\n      value: function _start(event) {\n        if (!this._supportPointerEvents) {\n          this._deltaX = event.touches[0].clientX;\n          return;\n        }\n\n        if (this._eventIsPointerPenTouch(event)) {\n          this._deltaX = event.clientX;\n        }\n      }\n    }, {\n      key: \"_end\",\n      value: function _end(event) {\n        if (this._eventIsPointerPenTouch(event)) {\n          this._deltaX = event.clientX - this._deltaX;\n        }\n\n        this._handleSwipe();\n\n        execute(this._config.endCallback);\n      }\n    }, {\n      key: \"_move\",\n      value: function _move(event) {\n        this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n      }\n    }, {\n      key: \"_handleSwipe\",\n      value: function _handleSwipe() {\n        var absDeltaX = Math.abs(this._deltaX);\n\n        if (absDeltaX <= SWIPE_THRESHOLD) {\n          return;\n        }\n\n        var direction = absDeltaX / this._deltaX;\n        this._deltaX = 0;\n\n        if (!direction) {\n          return;\n        }\n\n        execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n      }\n    }, {\n      key: \"_initEvents\",\n      value: function _initEvents() {\n        var _this4 = this;\n\n        if (this._supportPointerEvents) {\n          EventHandler.on(this._element, EVENT_POINTERDOWN, function (event) {\n            return _this4._start(event);\n          });\n          EventHandler.on(this._element, EVENT_POINTERUP, function (event) {\n            return _this4._end(event);\n          });\n\n          this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n        } else {\n          EventHandler.on(this._element, EVENT_TOUCHSTART, function (event) {\n            return _this4._start(event);\n          });\n          EventHandler.on(this._element, EVENT_TOUCHMOVE, function (event) {\n            return _this4._move(event);\n          });\n          EventHandler.on(this._element, EVENT_TOUCHEND, function (event) {\n            return _this4._end(event);\n          });\n        }\n      }\n    }, {\n      key: \"_eventIsPointerPenTouch\",\n      value: function _eventIsPointerPenTouch(event) {\n        return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$c;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$c;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$d;\n      }\n    }, {\n      key: \"isSupported\",\n      value: function isSupported() {\n        return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n      }\n    }]);\n\n    return Swipe;\n  }(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap carousel.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$c = 'carousel';\n  var DATA_KEY$8 = 'bs.carousel';\n  var EVENT_KEY$8 = \".\".concat(DATA_KEY$8);\n  var DATA_API_KEY$5 = '.data-api';\n  var ARROW_LEFT_KEY$1 = 'ArrowLeft';\n  var ARROW_RIGHT_KEY$1 = 'ArrowRight';\n  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\n  var ORDER_NEXT = 'next';\n  var ORDER_PREV = 'prev';\n  var DIRECTION_LEFT = 'left';\n  var DIRECTION_RIGHT = 'right';\n  var EVENT_SLIDE = \"slide\".concat(EVENT_KEY$8);\n  var EVENT_SLID = \"slid\".concat(EVENT_KEY$8);\n  var EVENT_KEYDOWN$1 = \"keydown\".concat(EVENT_KEY$8);\n  var EVENT_MOUSEENTER$1 = \"mouseenter\".concat(EVENT_KEY$8);\n  var EVENT_MOUSELEAVE$1 = \"mouseleave\".concat(EVENT_KEY$8);\n  var EVENT_DRAG_START = \"dragstart\".concat(EVENT_KEY$8);\n  var EVENT_LOAD_DATA_API$3 = \"load\".concat(EVENT_KEY$8).concat(DATA_API_KEY$5);\n  var EVENT_CLICK_DATA_API$5 = \"click\".concat(EVENT_KEY$8).concat(DATA_API_KEY$5);\n  var CLASS_NAME_CAROUSEL = 'carousel';\n  var CLASS_NAME_ACTIVE$2 = 'active';\n  var CLASS_NAME_SLIDE = 'slide';\n  var CLASS_NAME_END = 'carousel-item-end';\n  var CLASS_NAME_START = 'carousel-item-start';\n  var CLASS_NAME_NEXT = 'carousel-item-next';\n  var CLASS_NAME_PREV = 'carousel-item-prev';\n  var SELECTOR_ACTIVE = '.active';\n  var SELECTOR_ITEM = '.carousel-item';\n  var SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;\n  var SELECTOR_ITEM_IMG = '.carousel-item img';\n  var SELECTOR_INDICATORS = '.carousel-indicators';\n  var SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';\n  var SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]';\n  var KEY_TO_DIRECTION = (_KEY_TO_DIRECTION = {}, _defineProperty(_KEY_TO_DIRECTION, ARROW_LEFT_KEY$1, DIRECTION_RIGHT), _defineProperty(_KEY_TO_DIRECTION, ARROW_RIGHT_KEY$1, DIRECTION_LEFT), _KEY_TO_DIRECTION);\n  var Default$b = {\n    interval: 5000,\n    keyboard: true,\n    pause: 'hover',\n    ride: false,\n    touch: true,\n    wrap: true\n  };\n  var DefaultType$b = {\n    interval: '(number|boolean)',\n    // TODO:v6 remove boolean support\n    keyboard: 'boolean',\n    pause: '(string|boolean)',\n    ride: '(boolean|string)',\n    touch: 'boolean',\n    wrap: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  var Carousel = /*#__PURE__*/function (_BaseComponent3) {\n    _inherits(Carousel, _BaseComponent3);\n\n    var _super5 = _createSuper(Carousel);\n\n    function Carousel(element, config) {\n      var _this5;\n\n      _classCallCheck(this, Carousel);\n\n      _this5 = _super5.call(this, element, config);\n      _this5._interval = null;\n      _this5._activeElement = null;\n      _this5._isSliding = false;\n      _this5.touchTimeout = null;\n      _this5._swipeHelper = null;\n      _this5._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, _this5._element);\n\n      _this5._addEventListeners();\n\n      if (_this5._config.ride === CLASS_NAME_CAROUSEL) {\n        _this5.cycle();\n      }\n\n      return _this5;\n    } // Getters\n\n\n    _createClass(Carousel, [{\n      key: \"next\",\n      value: // Public\n      function next() {\n        this._slide(ORDER_NEXT);\n      }\n    }, {\n      key: \"nextWhenVisible\",\n      value: function nextWhenVisible() {\n        // FIXME TODO use `document.visibilityState`\n        // Don't call next when the page isn't visible\n        // or the carousel or its parent isn't visible\n        if (!document.hidden && isVisible(this._element)) {\n          this.next();\n        }\n      }\n    }, {\n      key: \"prev\",\n      value: function prev() {\n        this._slide(ORDER_PREV);\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        if (this._isSliding) {\n          triggerTransitionEnd(this._element);\n        }\n\n        this._clearInterval();\n      }\n    }, {\n      key: \"cycle\",\n      value: function cycle() {\n        var _this6 = this;\n\n        this._clearInterval();\n\n        this._updateInterval();\n\n        this._interval = setInterval(function () {\n          return _this6.nextWhenVisible();\n        }, this._config.interval);\n      }\n    }, {\n      key: \"_maybeEnableCycle\",\n      value: function _maybeEnableCycle() {\n        var _this7 = this;\n\n        if (!this._config.ride) {\n          return;\n        }\n\n        if (this._isSliding) {\n          EventHandler.one(this._element, EVENT_SLID, function () {\n            return _this7.cycle();\n          });\n          return;\n        }\n\n        this.cycle();\n      }\n    }, {\n      key: \"to\",\n      value: function to(index) {\n        var _this8 = this;\n\n        var items = this._getItems();\n\n        if (index > items.length - 1 || index < 0) {\n          return;\n        }\n\n        if (this._isSliding) {\n          EventHandler.one(this._element, EVENT_SLID, function () {\n            return _this8.to(index);\n          });\n          return;\n        }\n\n        var activeIndex = this._getItemIndex(this._getActive());\n\n        if (activeIndex === index) {\n          return;\n        }\n\n        var order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;\n\n        this._slide(order, items[index]);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        if (this._swipeHelper) {\n          this._swipeHelper.dispose();\n        }\n\n        _get(_getPrototypeOf(Carousel.prototype), \"dispose\", this).call(this);\n      } // Private\n\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        config.defaultInterval = config.interval;\n        return config;\n      }\n    }, {\n      key: \"_addEventListeners\",\n      value: function _addEventListeners() {\n        var _this9 = this;\n\n        if (this._config.keyboard) {\n          EventHandler.on(this._element, EVENT_KEYDOWN$1, function (event) {\n            return _this9._keydown(event);\n          });\n        }\n\n        if (this._config.pause === 'hover') {\n          EventHandler.on(this._element, EVENT_MOUSEENTER$1, function () {\n            return _this9.pause();\n          });\n          EventHandler.on(this._element, EVENT_MOUSELEAVE$1, function () {\n            return _this9._maybeEnableCycle();\n          });\n        }\n\n        if (this._config.touch && Swipe.isSupported()) {\n          this._addTouchEventListeners();\n        }\n      }\n    }, {\n      key: \"_addTouchEventListeners\",\n      value: function _addTouchEventListeners() {\n        var _this10 = this;\n\n        var _iterator5 = _createForOfIteratorHelper(SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var img = _step5.value;\n            EventHandler.on(img, EVENT_DRAG_START, function (event) {\n              return event.preventDefault();\n            });\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        var endCallBack = function endCallBack() {\n          if (_this10._config.pause !== 'hover') {\n            return;\n          } // If it's a touch-enabled device, mouseenter/leave are fired as\n          // part of the mouse compatibility events on first tap - the carousel\n          // would stop cycling until user tapped out of it;\n          // here, we listen for touchend, explicitly pause the carousel\n          // (as if it's the second time we tap on it, mouseenter compat event\n          // is NOT fired) and after a timeout (to allow for mouse compatibility\n          // events to fire) we explicitly restart cycling\n\n\n          _this10.pause();\n\n          if (_this10.touchTimeout) {\n            clearTimeout(_this10.touchTimeout);\n          }\n\n          _this10.touchTimeout = setTimeout(function () {\n            return _this10._maybeEnableCycle();\n          }, TOUCHEVENT_COMPAT_WAIT + _this10._config.interval);\n        };\n\n        var swipeConfig = {\n          leftCallback: function leftCallback() {\n            return _this10._slide(_this10._directionToOrder(DIRECTION_LEFT));\n          },\n          rightCallback: function rightCallback() {\n            return _this10._slide(_this10._directionToOrder(DIRECTION_RIGHT));\n          },\n          endCallback: endCallBack\n        };\n        this._swipeHelper = new Swipe(this._element, swipeConfig);\n      }\n    }, {\n      key: \"_keydown\",\n      value: function _keydown(event) {\n        if (/input|textarea/i.test(event.target.tagName)) {\n          return;\n        }\n\n        var direction = KEY_TO_DIRECTION[event.key];\n\n        if (direction) {\n          event.preventDefault();\n\n          this._slide(this._directionToOrder(direction));\n        }\n      }\n    }, {\n      key: \"_getItemIndex\",\n      value: function _getItemIndex(element) {\n        return this._getItems().indexOf(element);\n      }\n    }, {\n      key: \"_setActiveIndicatorElement\",\n      value: function _setActiveIndicatorElement(index) {\n        if (!this._indicatorsElement) {\n          return;\n        }\n\n        var activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement);\n        activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);\n        activeIndicator.removeAttribute('aria-current');\n        var newActiveIndicator = SelectorEngine.findOne(\"[data-bs-slide-to=\\\"\".concat(index, \"\\\"]\"), this._indicatorsElement);\n\n        if (newActiveIndicator) {\n          newActiveIndicator.classList.add(CLASS_NAME_ACTIVE$2);\n          newActiveIndicator.setAttribute('aria-current', 'true');\n        }\n      }\n    }, {\n      key: \"_updateInterval\",\n      value: function _updateInterval() {\n        var element = this._activeElement || this._getActive();\n\n        if (!element) {\n          return;\n        }\n\n        var elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);\n        this._config.interval = elementInterval || this._config.defaultInterval;\n      }\n    }, {\n      key: \"_slide\",\n      value: function _slide(order) {\n        var _this11 = this;\n\n        var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        if (this._isSliding) {\n          return;\n        }\n\n        var activeElement = this._getActive();\n\n        var isNext = order === ORDER_NEXT;\n        var nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);\n\n        if (nextElement === activeElement) {\n          return;\n        }\n\n        var nextElementIndex = this._getItemIndex(nextElement);\n\n        var triggerEvent = function triggerEvent(eventName) {\n          return EventHandler.trigger(_this11._element, eventName, {\n            relatedTarget: nextElement,\n            direction: _this11._orderToDirection(order),\n            from: _this11._getItemIndex(activeElement),\n            to: nextElementIndex\n          });\n        };\n\n        var slideEvent = triggerEvent(EVENT_SLIDE);\n\n        if (slideEvent.defaultPrevented) {\n          return;\n        }\n\n        if (!activeElement || !nextElement) {\n          // Some weirdness is happening, so we bail\n          // TODO: change tests that use empty divs to avoid this check\n          return;\n        }\n\n        var isCycling = Boolean(this._interval);\n        this.pause();\n        this._isSliding = true;\n\n        this._setActiveIndicatorElement(nextElementIndex);\n\n        this._activeElement = nextElement;\n        var directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;\n        var orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;\n        nextElement.classList.add(orderClassName);\n        reflow(nextElement);\n        activeElement.classList.add(directionalClassName);\n        nextElement.classList.add(directionalClassName);\n\n        var completeCallBack = function completeCallBack() {\n          nextElement.classList.remove(directionalClassName, orderClassName);\n          nextElement.classList.add(CLASS_NAME_ACTIVE$2);\n          activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);\n          _this11._isSliding = false;\n          triggerEvent(EVENT_SLID);\n        };\n\n        this._queueCallback(completeCallBack, activeElement, this._isAnimated());\n\n        if (isCycling) {\n          this.cycle();\n        }\n      }\n    }, {\n      key: \"_isAnimated\",\n      value: function _isAnimated() {\n        return this._element.classList.contains(CLASS_NAME_SLIDE);\n      }\n    }, {\n      key: \"_getActive\",\n      value: function _getActive() {\n        return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);\n      }\n    }, {\n      key: \"_getItems\",\n      value: function _getItems() {\n        return SelectorEngine.find(SELECTOR_ITEM, this._element);\n      }\n    }, {\n      key: \"_clearInterval\",\n      value: function _clearInterval() {\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = null;\n        }\n      }\n    }, {\n      key: \"_directionToOrder\",\n      value: function _directionToOrder(direction) {\n        if (isRTL()) {\n          return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;\n        }\n\n        return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;\n      }\n    }, {\n      key: \"_orderToDirection\",\n      value: function _orderToDirection(order) {\n        if (isRTL()) {\n          return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        }\n\n        return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$b;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$b;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$c;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Carousel.getOrCreateInstance(this, config);\n\n          if (typeof config === 'number') {\n            data.to(config);\n            return;\n          }\n\n          if (typeof config === 'string') {\n            if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n              throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n            }\n\n            data[config]();\n          }\n        });\n      }\n    }]);\n\n    return Carousel;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, function (event) {\n    var target = SelectorEngine.getElementFromSelector(this);\n\n    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n      return;\n    }\n\n    event.preventDefault();\n    var carousel = Carousel.getOrCreateInstance(target);\n    var slideIndex = this.getAttribute('data-bs-slide-to');\n\n    if (slideIndex) {\n      carousel.to(slideIndex);\n\n      carousel._maybeEnableCycle();\n\n      return;\n    }\n\n    if (Manipulator.getDataAttribute(this, 'slide') === 'next') {\n      carousel.next();\n\n      carousel._maybeEnableCycle();\n\n      return;\n    }\n\n    carousel.prev();\n\n    carousel._maybeEnableCycle();\n  });\n  EventHandler.on(window, EVENT_LOAD_DATA_API$3, function () {\n    var carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);\n\n    var _iterator6 = _createForOfIteratorHelper(carousels),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var carousel = _step6.value;\n        Carousel.getOrCreateInstance(carousel);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Carousel);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$b = 'collapse';\n  var DATA_KEY$7 = 'bs.collapse';\n  var EVENT_KEY$7 = \".\".concat(DATA_KEY$7);\n  var DATA_API_KEY$4 = '.data-api';\n  var EVENT_SHOW$6 = \"show\".concat(EVENT_KEY$7);\n  var EVENT_SHOWN$6 = \"shown\".concat(EVENT_KEY$7);\n  var EVENT_HIDE$6 = \"hide\".concat(EVENT_KEY$7);\n  var EVENT_HIDDEN$6 = \"hidden\".concat(EVENT_KEY$7);\n  var EVENT_CLICK_DATA_API$4 = \"click\".concat(EVENT_KEY$7).concat(DATA_API_KEY$4);\n  var CLASS_NAME_SHOW$7 = 'show';\n  var CLASS_NAME_COLLAPSE = 'collapse';\n  var CLASS_NAME_COLLAPSING = 'collapsing';\n  var CLASS_NAME_COLLAPSED = 'collapsed';\n  var CLASS_NAME_DEEPER_CHILDREN = \":scope .\".concat(CLASS_NAME_COLLAPSE, \" .\").concat(CLASS_NAME_COLLAPSE);\n  var CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\n  var WIDTH = 'width';\n  var HEIGHT = 'height';\n  var SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\n  var SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle=\"collapse\"]';\n  var Default$a = {\n    parent: null,\n    toggle: true\n  };\n  var DefaultType$a = {\n    parent: '(null|element)',\n    toggle: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  var Collapse = /*#__PURE__*/function (_BaseComponent4) {\n    _inherits(Collapse, _BaseComponent4);\n\n    var _super6 = _createSuper(Collapse);\n\n    function Collapse(element, config) {\n      var _this12;\n\n      _classCallCheck(this, Collapse);\n\n      _this12 = _super6.call(this, element, config);\n      _this12._isTransitioning = false;\n      _this12._triggerArray = [];\n      var toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);\n\n      var _iterator7 = _createForOfIteratorHelper(toggleList),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var elem = _step7.value;\n          var selector = SelectorEngine.getSelectorFromElement(elem);\n          var filterElement = SelectorEngine.find(selector).filter(function (foundElement) {\n            return foundElement === _this12._element;\n          });\n\n          if (selector !== null && filterElement.length) {\n            _this12._triggerArray.push(elem);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      _this12._initializeChildren();\n\n      if (!_this12._config.parent) {\n        _this12._addAriaAndCollapsedClass(_this12._triggerArray, _this12._isShown());\n      }\n\n      if (_this12._config.toggle) {\n        _this12.toggle();\n      }\n\n      return _this12;\n    } // Getters\n\n\n    _createClass(Collapse, [{\n      key: \"toggle\",\n      value: // Public\n      function toggle() {\n        if (this._isShown()) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        var _this13 = this;\n\n        if (this._isTransitioning || this._isShown()) {\n          return;\n        }\n\n        var activeChildren = []; // find active children\n\n        if (this._config.parent) {\n          activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter(function (element) {\n            return element !== _this13._element;\n          }).map(function (element) {\n            return Collapse.getOrCreateInstance(element, {\n              toggle: false\n            });\n          });\n        }\n\n        if (activeChildren.length && activeChildren[0]._isTransitioning) {\n          return;\n        }\n\n        var startEvent = EventHandler.trigger(this._element, EVENT_SHOW$6);\n\n        if (startEvent.defaultPrevented) {\n          return;\n        }\n\n        var _iterator8 = _createForOfIteratorHelper(activeChildren),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var activeInstance = _step8.value;\n            activeInstance.hide();\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        var dimension = this._getDimension();\n\n        this._element.classList.remove(CLASS_NAME_COLLAPSE);\n\n        this._element.classList.add(CLASS_NAME_COLLAPSING);\n\n        this._element.style[dimension] = 0;\n\n        this._addAriaAndCollapsedClass(this._triggerArray, true);\n\n        this._isTransitioning = true;\n\n        var complete = function complete() {\n          _this13._isTransitioning = false;\n\n          _this13._element.classList.remove(CLASS_NAME_COLLAPSING);\n\n          _this13._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n\n          _this13._element.style[dimension] = '';\n          EventHandler.trigger(_this13._element, EVENT_SHOWN$6);\n        };\n\n        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n        var scrollSize = \"scroll\".concat(capitalizedDimension);\n\n        this._queueCallback(complete, this._element, true);\n\n        this._element.style[dimension] = \"\".concat(this._element[scrollSize], \"px\");\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this14 = this;\n\n        if (this._isTransitioning || !this._isShown()) {\n          return;\n        }\n\n        var startEvent = EventHandler.trigger(this._element, EVENT_HIDE$6);\n\n        if (startEvent.defaultPrevented) {\n          return;\n        }\n\n        var dimension = this._getDimension();\n\n        this._element.style[dimension] = \"\".concat(this._element.getBoundingClientRect()[dimension], \"px\");\n        reflow(this._element);\n\n        this._element.classList.add(CLASS_NAME_COLLAPSING);\n\n        this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n\n        var _iterator9 = _createForOfIteratorHelper(this._triggerArray),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var trigger = _step9.value;\n            var element = SelectorEngine.getElementFromSelector(trigger);\n\n            if (element && !this._isShown(element)) {\n              this._addAriaAndCollapsedClass([trigger], false);\n            }\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        this._isTransitioning = true;\n\n        var complete = function complete() {\n          _this14._isTransitioning = false;\n\n          _this14._element.classList.remove(CLASS_NAME_COLLAPSING);\n\n          _this14._element.classList.add(CLASS_NAME_COLLAPSE);\n\n          EventHandler.trigger(_this14._element, EVENT_HIDDEN$6);\n        };\n\n        this._element.style[dimension] = '';\n\n        this._queueCallback(complete, this._element, true);\n      } // Private\n\n    }, {\n      key: \"_isShown\",\n      value: function _isShown() {\n        var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._element;\n        return element.classList.contains(CLASS_NAME_SHOW$7);\n      }\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        config.toggle = Boolean(config.toggle); // Coerce string values\n\n        config.parent = getElement(config.parent);\n        return config;\n      }\n    }, {\n      key: \"_getDimension\",\n      value: function _getDimension() {\n        return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;\n      }\n    }, {\n      key: \"_initializeChildren\",\n      value: function _initializeChildren() {\n        if (!this._config.parent) {\n          return;\n        }\n\n        var children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE$4);\n\n        var _iterator10 = _createForOfIteratorHelper(children),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var element = _step10.value;\n            var selected = SelectorEngine.getElementFromSelector(element);\n\n            if (selected) {\n              this._addAriaAndCollapsedClass([element], this._isShown(selected));\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n    }, {\n      key: \"_getFirstLevelChildren\",\n      value: function _getFirstLevelChildren(selector) {\n        var children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent); // remove children if greater depth\n\n        return SelectorEngine.find(selector, this._config.parent).filter(function (element) {\n          return !children.includes(element);\n        });\n      }\n    }, {\n      key: \"_addAriaAndCollapsedClass\",\n      value: function _addAriaAndCollapsedClass(triggerArray, isOpen) {\n        if (!triggerArray.length) {\n          return;\n        }\n\n        var _iterator11 = _createForOfIteratorHelper(triggerArray),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var element = _step11.value;\n            element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);\n            element.setAttribute('aria-expanded', isOpen);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$a;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$a;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$b;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        var _config = {};\n\n        if (typeof config === 'string' && /show|hide/.test(config)) {\n          _config.toggle = false;\n        }\n\n        return this.each(function () {\n          var data = Collapse.getOrCreateInstance(this, _config);\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n            }\n\n            data[config]();\n          }\n        });\n      }\n    }]);\n\n    return Collapse;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    var _iterator12 = _createForOfIteratorHelper(SelectorEngine.getMultipleElementsFromSelector(this)),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var element = _step12.value;\n        Collapse.getOrCreateInstance(element, {\n          toggle: false\n        }).toggle();\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Collapse);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dropdown.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$a = 'dropdown';\n  var DATA_KEY$6 = 'bs.dropdown';\n  var EVENT_KEY$6 = \".\".concat(DATA_KEY$6);\n  var DATA_API_KEY$3 = '.data-api';\n  var ESCAPE_KEY$2 = 'Escape';\n  var TAB_KEY$1 = 'Tab';\n  var ARROW_UP_KEY$1 = 'ArrowUp';\n  var ARROW_DOWN_KEY$1 = 'ArrowDown';\n  var RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\n  var EVENT_HIDE$5 = \"hide\".concat(EVENT_KEY$6);\n  var EVENT_HIDDEN$5 = \"hidden\".concat(EVENT_KEY$6);\n  var EVENT_SHOW$5 = \"show\".concat(EVENT_KEY$6);\n  var EVENT_SHOWN$5 = \"shown\".concat(EVENT_KEY$6);\n  var EVENT_CLICK_DATA_API$3 = \"click\".concat(EVENT_KEY$6).concat(DATA_API_KEY$3);\n  var EVENT_KEYDOWN_DATA_API = \"keydown\".concat(EVENT_KEY$6).concat(DATA_API_KEY$3);\n  var EVENT_KEYUP_DATA_API = \"keyup\".concat(EVENT_KEY$6).concat(DATA_API_KEY$3);\n  var CLASS_NAME_SHOW$6 = 'show';\n  var CLASS_NAME_DROPUP = 'dropup';\n  var CLASS_NAME_DROPEND = 'dropend';\n  var CLASS_NAME_DROPSTART = 'dropstart';\n  var CLASS_NAME_DROPUP_CENTER = 'dropup-center';\n  var CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';\n  var SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)';\n  var SELECTOR_DATA_TOGGLE_SHOWN = \"\".concat(SELECTOR_DATA_TOGGLE$3, \".\").concat(CLASS_NAME_SHOW$6);\n  var SELECTOR_MENU = '.dropdown-menu';\n  var SELECTOR_NAVBAR = '.navbar';\n  var SELECTOR_NAVBAR_NAV = '.navbar-nav';\n  var SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\n  var PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';\n  var PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';\n  var PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';\n  var PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';\n  var PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';\n  var PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';\n  var PLACEMENT_TOPCENTER = 'top';\n  var PLACEMENT_BOTTOMCENTER = 'bottom';\n  var Default$9 = {\n    autoClose: true,\n    boundary: 'clippingParents',\n    display: 'dynamic',\n    offset: [0, 2],\n    popperConfig: null,\n    reference: 'toggle'\n  };\n  var DefaultType$9 = {\n    autoClose: '(boolean|string)',\n    boundary: '(string|element)',\n    display: 'string',\n    offset: '(array|string|function)',\n    popperConfig: '(null|object|function)',\n    reference: '(string|element|object)'\n  };\n  /**\n   * Class definition\n   */\n\n  var Dropdown = /*#__PURE__*/function (_BaseComponent5) {\n    _inherits(Dropdown, _BaseComponent5);\n\n    var _super7 = _createSuper(Dropdown);\n\n    function Dropdown(element, config) {\n      var _this15;\n\n      _classCallCheck(this, Dropdown);\n\n      _this15 = _super7.call(this, element, config);\n      _this15._popper = null;\n      _this15._parent = _this15._element.parentNode; // dropdown wrapper\n      // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n\n      _this15._menu = SelectorEngine.next(_this15._element, SELECTOR_MENU)[0] || SelectorEngine.prev(_this15._element, SELECTOR_MENU)[0] || SelectorEngine.findOne(SELECTOR_MENU, _this15._parent);\n      _this15._inNavbar = _this15._detectNavbar();\n      return _this15;\n    } // Getters\n\n\n    _createClass(Dropdown, [{\n      key: \"toggle\",\n      value: // Public\n      function toggle() {\n        return this._isShown() ? this.hide() : this.show();\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        if (isDisabled(this._element) || this._isShown()) {\n          return;\n        }\n\n        var relatedTarget = {\n          relatedTarget: this._element\n        };\n        var showEvent = EventHandler.trigger(this._element, EVENT_SHOW$5, relatedTarget);\n\n        if (showEvent.defaultPrevented) {\n          return;\n        }\n\n        this._createPopper(); // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n        if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n          var _ref15;\n\n          var _iterator13 = _createForOfIteratorHelper((_ref15 = []).concat.apply(_ref15, _toConsumableArray(document.body.children))),\n              _step13;\n\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var element = _step13.value;\n              EventHandler.on(element, 'mouseover', noop);\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        }\n\n        this._element.focus();\n\n        this._element.setAttribute('aria-expanded', true);\n\n        this._menu.classList.add(CLASS_NAME_SHOW$6);\n\n        this._element.classList.add(CLASS_NAME_SHOW$6);\n\n        EventHandler.trigger(this._element, EVENT_SHOWN$5, relatedTarget);\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        if (isDisabled(this._element) || !this._isShown()) {\n          return;\n        }\n\n        var relatedTarget = {\n          relatedTarget: this._element\n        };\n\n        this._completeHide(relatedTarget);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        if (this._popper) {\n          this._popper.destroy();\n        }\n\n        _get(_getPrototypeOf(Dropdown.prototype), \"dispose\", this).call(this);\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        this._inNavbar = this._detectNavbar();\n\n        if (this._popper) {\n          this._popper.update();\n        }\n      } // Private\n\n    }, {\n      key: \"_completeHide\",\n      value: function _completeHide(relatedTarget) {\n        var hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$5, relatedTarget);\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        } // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n\n\n        if ('ontouchstart' in document.documentElement) {\n          var _ref16;\n\n          var _iterator14 = _createForOfIteratorHelper((_ref16 = []).concat.apply(_ref16, _toConsumableArray(document.body.children))),\n              _step14;\n\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var element = _step14.value;\n              EventHandler.off(element, 'mouseover', noop);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n\n        if (this._popper) {\n          this._popper.destroy();\n        }\n\n        this._menu.classList.remove(CLASS_NAME_SHOW$6);\n\n        this._element.classList.remove(CLASS_NAME_SHOW$6);\n\n        this._element.setAttribute('aria-expanded', 'false');\n\n        Manipulator.removeDataAttribute(this._menu, 'popper');\n        EventHandler.trigger(this._element, EVENT_HIDDEN$5, relatedTarget);\n      }\n    }, {\n      key: \"_getConfig\",\n      value: function _getConfig(config) {\n        config = _get(_getPrototypeOf(Dropdown.prototype), \"_getConfig\", this).call(this, config);\n\n        if (_typeof(config.reference) === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {\n          // Popper virtual elements require a getBoundingClientRect method\n          throw new TypeError(\"\".concat(NAME$a.toUpperCase(), \": Option \\\"reference\\\" provided type \\\"object\\\" without a required \\\"getBoundingClientRect\\\" method.\"));\n        }\n\n        return config;\n      }\n    }, {\n      key: \"_createPopper\",\n      value: function _createPopper() {\n        if (typeof Popper__namespace === 'undefined') {\n          throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org/docs/v2/)');\n        }\n\n        var referenceElement = this._element;\n\n        if (this._config.reference === 'parent') {\n          referenceElement = this._parent;\n        } else if (isElement(this._config.reference)) {\n          referenceElement = getElement(this._config.reference);\n        } else if (_typeof(this._config.reference) === 'object') {\n          referenceElement = this._config.reference;\n        }\n\n        var popperConfig = this._getPopperConfig();\n\n        this._popper = Popper__namespace.createPopper(referenceElement, this._menu, popperConfig);\n      }\n    }, {\n      key: \"_isShown\",\n      value: function _isShown() {\n        return this._menu.classList.contains(CLASS_NAME_SHOW$6);\n      }\n    }, {\n      key: \"_getPlacement\",\n      value: function _getPlacement() {\n        var parentDropdown = this._parent;\n\n        if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n          return PLACEMENT_RIGHT;\n        }\n\n        if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n          return PLACEMENT_LEFT;\n        }\n\n        if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n          return PLACEMENT_TOPCENTER;\n        }\n\n        if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n          return PLACEMENT_BOTTOMCENTER;\n        } // We need to trim the value because custom properties can also include spaces\n\n\n        var isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n\n        if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n          return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n        }\n\n        return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;\n      }\n    }, {\n      key: \"_detectNavbar\",\n      value: function _detectNavbar() {\n        return this._element.closest(SELECTOR_NAVBAR) !== null;\n      }\n    }, {\n      key: \"_getOffset\",\n      value: function _getOffset() {\n        var _this16 = this;\n\n        var offset = this._config.offset;\n\n        if (typeof offset === 'string') {\n          return offset.split(',').map(function (value) {\n            return Number.parseInt(value, 10);\n          });\n        }\n\n        if (typeof offset === 'function') {\n          return function (popperData) {\n            return offset(popperData, _this16._element);\n          };\n        }\n\n        return offset;\n      }\n    }, {\n      key: \"_getPopperConfig\",\n      value: function _getPopperConfig() {\n        var defaultBsPopperConfig = {\n          placement: this._getPlacement(),\n          modifiers: [{\n            name: 'preventOverflow',\n            options: {\n              boundary: this._config.boundary\n            }\n          }, {\n            name: 'offset',\n            options: {\n              offset: this._getOffset()\n            }\n          }]\n        }; // Disable Popper if we have a static display or Dropdown is in Navbar\n\n        if (this._inNavbar || this._config.display === 'static') {\n          Manipulator.setDataAttribute(this._menu, 'popper', 'static'); // TODO: v6 remove\n\n          defaultBsPopperConfig.modifiers = [{\n            name: 'applyStyles',\n            enabled: false\n          }];\n        }\n\n        return _objectSpread(_objectSpread({}, defaultBsPopperConfig), execute(this._config.popperConfig, [undefined, defaultBsPopperConfig]));\n      }\n    }, {\n      key: \"_selectMenuItem\",\n      value: function _selectMenuItem(_ref17) {\n        var key = _ref17.key,\n            target = _ref17.target;\n        var items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(function (element) {\n          return isVisible(element);\n        });\n\n        if (!items.length) {\n          return;\n        } // if target isn't included in items (e.g. when expanding the dropdown)\n        // allow cycling to get the last item in case key equals ARROW_UP_KEY\n\n\n        getNextActiveElement(items, target, key === ARROW_DOWN_KEY$1, !items.includes(target)).focus();\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$9;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$9;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$a;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Dropdown.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config]();\n        });\n      }\n    }, {\n      key: \"clearMenus\",\n      value: function clearMenus(event) {\n        if (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1) {\n          return;\n        }\n\n        var openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN);\n\n        var _iterator15 = _createForOfIteratorHelper(openToggles),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var toggle = _step15.value;\n            var context = Dropdown.getInstance(toggle);\n\n            if (!context || context._config.autoClose === false) {\n              continue;\n            }\n\n            var composedPath = event.composedPath();\n            var isMenuTarget = composedPath.includes(context._menu);\n\n            if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {\n              continue;\n            } // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n\n\n            if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n              continue;\n            }\n\n            var relatedTarget = {\n              relatedTarget: context._element\n            };\n\n            if (event.type === 'click') {\n              relatedTarget.clickEvent = event;\n            }\n\n            context._completeHide(relatedTarget);\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n      }\n    }, {\n      key: \"dataApiKeydownHandler\",\n      value: function dataApiKeydownHandler(event) {\n        // If not an UP | DOWN | ESCAPE key => not a dropdown command\n        // If input/textarea && if key is other than ESCAPE => not a dropdown command\n        var isInput = /input|textarea/i.test(event.target.tagName);\n        var isEscapeEvent = event.key === ESCAPE_KEY$2;\n        var isUpOrDownEvent = [ARROW_UP_KEY$1, ARROW_DOWN_KEY$1].includes(event.key);\n\n        if (!isUpOrDownEvent && !isEscapeEvent) {\n          return;\n        }\n\n        if (isInput && !isEscapeEvent) {\n          return;\n        }\n\n        event.preventDefault(); // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n\n        var getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.next(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.findOne(SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);\n        var instance = Dropdown.getOrCreateInstance(getToggleButton);\n\n        if (isUpOrDownEvent) {\n          event.stopPropagation();\n          instance.show();\n\n          instance._selectMenuItem(event);\n\n          return;\n        }\n\n        if (instance._isShown()) {\n          // else is escape and we check if it is shown\n          event.stopPropagation();\n          instance.hide();\n          getToggleButton.focus();\n        }\n      }\n    }]);\n\n    return Dropdown;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);\n  EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\n  EventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);\n  EventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\n  EventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {\n    event.preventDefault();\n    Dropdown.getOrCreateInstance(this).toggle();\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Dropdown);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/backdrop.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$9 = 'backdrop';\n  var CLASS_NAME_FADE$4 = 'fade';\n  var CLASS_NAME_SHOW$5 = 'show';\n  var EVENT_MOUSEDOWN = \"mousedown.bs.\".concat(NAME$9);\n  var Default$8 = {\n    className: 'modal-backdrop',\n    clickCallback: null,\n    isAnimated: false,\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    rootElement: 'body' // give the choice to place backdrop under different elements\n\n  };\n  var DefaultType$8 = {\n    className: 'string',\n    clickCallback: '(function|null)',\n    isAnimated: 'boolean',\n    isVisible: 'boolean',\n    rootElement: '(element|string)'\n  };\n  /**\n   * Class definition\n   */\n\n  var Backdrop = /*#__PURE__*/function (_Config3) {\n    _inherits(Backdrop, _Config3);\n\n    var _super8 = _createSuper(Backdrop);\n\n    function Backdrop(config) {\n      var _this17;\n\n      _classCallCheck(this, Backdrop);\n\n      _this17 = _super8.call(this);\n      _this17._config = _this17._getConfig(config);\n      _this17._isAppended = false;\n      _this17._element = null;\n      return _this17;\n    } // Getters\n\n\n    _createClass(Backdrop, [{\n      key: \"show\",\n      value: // Public\n      function show(callback) {\n        if (!this._config.isVisible) {\n          execute(callback);\n          return;\n        }\n\n        this._append();\n\n        var element = this._getElement();\n\n        if (this._config.isAnimated) {\n          reflow(element);\n        }\n\n        element.classList.add(CLASS_NAME_SHOW$5);\n\n        this._emulateAnimation(function () {\n          execute(callback);\n        });\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(callback) {\n        var _this18 = this;\n\n        if (!this._config.isVisible) {\n          execute(callback);\n          return;\n        }\n\n        this._getElement().classList.remove(CLASS_NAME_SHOW$5);\n\n        this._emulateAnimation(function () {\n          _this18.dispose();\n\n          execute(callback);\n        });\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        if (!this._isAppended) {\n          return;\n        }\n\n        EventHandler.off(this._element, EVENT_MOUSEDOWN);\n\n        this._element.remove();\n\n        this._isAppended = false;\n      } // Private\n\n    }, {\n      key: \"_getElement\",\n      value: function _getElement() {\n        if (!this._element) {\n          var backdrop = document.createElement('div');\n          backdrop.className = this._config.className;\n\n          if (this._config.isAnimated) {\n            backdrop.classList.add(CLASS_NAME_FADE$4);\n          }\n\n          this._element = backdrop;\n        }\n\n        return this._element;\n      }\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n        config.rootElement = getElement(config.rootElement);\n        return config;\n      }\n    }, {\n      key: \"_append\",\n      value: function _append() {\n        var _this19 = this;\n\n        if (this._isAppended) {\n          return;\n        }\n\n        var element = this._getElement();\n\n        this._config.rootElement.append(element);\n\n        EventHandler.on(element, EVENT_MOUSEDOWN, function () {\n          execute(_this19._config.clickCallback);\n        });\n        this._isAppended = true;\n      }\n    }, {\n      key: \"_emulateAnimation\",\n      value: function _emulateAnimation(callback) {\n        executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n      }\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$8;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$8;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$9;\n      }\n    }]);\n\n    return Backdrop;\n  }(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/focustrap.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$8 = 'focustrap';\n  var DATA_KEY$5 = 'bs.focustrap';\n  var EVENT_KEY$5 = \".\".concat(DATA_KEY$5);\n  var EVENT_FOCUSIN$2 = \"focusin\".concat(EVENT_KEY$5);\n  var EVENT_KEYDOWN_TAB = \"keydown.tab\".concat(EVENT_KEY$5);\n  var TAB_KEY = 'Tab';\n  var TAB_NAV_FORWARD = 'forward';\n  var TAB_NAV_BACKWARD = 'backward';\n  var Default$7 = {\n    autofocus: true,\n    trapElement: null // The element to trap focus inside of\n\n  };\n  var DefaultType$7 = {\n    autofocus: 'boolean',\n    trapElement: 'element'\n  };\n  /**\n   * Class definition\n   */\n\n  var FocusTrap = /*#__PURE__*/function (_Config4) {\n    _inherits(FocusTrap, _Config4);\n\n    var _super9 = _createSuper(FocusTrap);\n\n    function FocusTrap(config) {\n      var _this20;\n\n      _classCallCheck(this, FocusTrap);\n\n      _this20 = _super9.call(this);\n      _this20._config = _this20._getConfig(config);\n      _this20._isActive = false;\n      _this20._lastTabNavDirection = null;\n      return _this20;\n    } // Getters\n\n\n    _createClass(FocusTrap, [{\n      key: \"activate\",\n      value: // Public\n      function activate() {\n        var _this21 = this;\n\n        if (this._isActive) {\n          return;\n        }\n\n        if (this._config.autofocus) {\n          this._config.trapElement.focus();\n        }\n\n        EventHandler.off(document, EVENT_KEY$5); // guard against infinite focus loop\n\n        EventHandler.on(document, EVENT_FOCUSIN$2, function (event) {\n          return _this21._handleFocusin(event);\n        });\n        EventHandler.on(document, EVENT_KEYDOWN_TAB, function (event) {\n          return _this21._handleKeydown(event);\n        });\n        this._isActive = true;\n      }\n    }, {\n      key: \"deactivate\",\n      value: function deactivate() {\n        if (!this._isActive) {\n          return;\n        }\n\n        this._isActive = false;\n        EventHandler.off(document, EVENT_KEY$5);\n      } // Private\n\n    }, {\n      key: \"_handleFocusin\",\n      value: function _handleFocusin(event) {\n        var trapElement = this._config.trapElement;\n\n        if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n          return;\n        }\n\n        var elements = SelectorEngine.focusableChildren(trapElement);\n\n        if (elements.length === 0) {\n          trapElement.focus();\n        } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n          elements[elements.length - 1].focus();\n        } else {\n          elements[0].focus();\n        }\n      }\n    }, {\n      key: \"_handleKeydown\",\n      value: function _handleKeydown(event) {\n        if (event.key !== TAB_KEY) {\n          return;\n        }\n\n        this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;\n      }\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$7;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$7;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$8;\n      }\n    }]);\n\n    return FocusTrap;\n  }(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/scrollBar.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\n  var SELECTOR_STICKY_CONTENT = '.sticky-top';\n  var PROPERTY_PADDING = 'padding-right';\n  var PROPERTY_MARGIN = 'margin-right';\n  /**\n   * Class definition\n   */\n\n  var ScrollBarHelper = /*#__PURE__*/function () {\n    function ScrollBarHelper() {\n      _classCallCheck(this, ScrollBarHelper);\n\n      this._element = document.body;\n    } // Public\n\n\n    _createClass(ScrollBarHelper, [{\n      key: \"getWidth\",\n      value: function getWidth() {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n        var documentWidth = document.documentElement.clientWidth;\n        return Math.abs(window.innerWidth - documentWidth);\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var width = this.getWidth();\n\n        this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width\n\n\n        this._setElementAttributes(this._element, PROPERTY_PADDING, function (calculatedValue) {\n          return calculatedValue + width;\n        }); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n\n\n        this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, function (calculatedValue) {\n          return calculatedValue + width;\n        });\n\n        this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, function (calculatedValue) {\n          return calculatedValue - width;\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this._resetElementAttributes(this._element, 'overflow');\n\n        this._resetElementAttributes(this._element, PROPERTY_PADDING);\n\n        this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n\n        this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n      }\n    }, {\n      key: \"isOverflowing\",\n      value: function isOverflowing() {\n        return this.getWidth() > 0;\n      } // Private\n\n    }, {\n      key: \"_disableOverFlow\",\n      value: function _disableOverFlow() {\n        this._saveInitialAttribute(this._element, 'overflow');\n\n        this._element.style.overflow = 'hidden';\n      }\n    }, {\n      key: \"_setElementAttributes\",\n      value: function _setElementAttributes(selector, styleProperty, callback) {\n        var _this22 = this;\n\n        var scrollbarWidth = this.getWidth();\n\n        var manipulationCallBack = function manipulationCallBack(element) {\n          if (element !== _this22._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n            return;\n          }\n\n          _this22._saveInitialAttribute(element, styleProperty);\n\n          var calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n          element.style.setProperty(styleProperty, \"\".concat(callback(Number.parseFloat(calculatedValue)), \"px\"));\n        };\n\n        this._applyManipulationCallback(selector, manipulationCallBack);\n      }\n    }, {\n      key: \"_saveInitialAttribute\",\n      value: function _saveInitialAttribute(element, styleProperty) {\n        var actualValue = element.style.getPropertyValue(styleProperty);\n\n        if (actualValue) {\n          Manipulator.setDataAttribute(element, styleProperty, actualValue);\n        }\n      }\n    }, {\n      key: \"_resetElementAttributes\",\n      value: function _resetElementAttributes(selector, styleProperty) {\n        var manipulationCallBack = function manipulationCallBack(element) {\n          var value = Manipulator.getDataAttribute(element, styleProperty); // We only want to remove the property if the value is `null`; the value can also be zero\n\n          if (value === null) {\n            element.style.removeProperty(styleProperty);\n            return;\n          }\n\n          Manipulator.removeDataAttribute(element, styleProperty);\n          element.style.setProperty(styleProperty, value);\n        };\n\n        this._applyManipulationCallback(selector, manipulationCallBack);\n      }\n    }, {\n      key: \"_applyManipulationCallback\",\n      value: function _applyManipulationCallback(selector, callBack) {\n        if (isElement(selector)) {\n          callBack(selector);\n          return;\n        }\n\n        var _iterator16 = _createForOfIteratorHelper(SelectorEngine.find(selector, this._element)),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var sel = _step16.value;\n            callBack(sel);\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n    }]);\n\n    return ScrollBarHelper;\n  }();\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$7 = 'modal';\n  var DATA_KEY$4 = 'bs.modal';\n  var EVENT_KEY$4 = \".\".concat(DATA_KEY$4);\n  var DATA_API_KEY$2 = '.data-api';\n  var ESCAPE_KEY$1 = 'Escape';\n  var EVENT_HIDE$4 = \"hide\".concat(EVENT_KEY$4);\n  var EVENT_HIDE_PREVENTED$1 = \"hidePrevented\".concat(EVENT_KEY$4);\n  var EVENT_HIDDEN$4 = \"hidden\".concat(EVENT_KEY$4);\n  var EVENT_SHOW$4 = \"show\".concat(EVENT_KEY$4);\n  var EVENT_SHOWN$4 = \"shown\".concat(EVENT_KEY$4);\n  var EVENT_RESIZE$1 = \"resize\".concat(EVENT_KEY$4);\n  var EVENT_CLICK_DISMISS = \"click.dismiss\".concat(EVENT_KEY$4);\n  var EVENT_MOUSEDOWN_DISMISS = \"mousedown.dismiss\".concat(EVENT_KEY$4);\n  var EVENT_KEYDOWN_DISMISS$1 = \"keydown.dismiss\".concat(EVENT_KEY$4);\n  var EVENT_CLICK_DATA_API$2 = \"click\".concat(EVENT_KEY$4).concat(DATA_API_KEY$2);\n  var CLASS_NAME_OPEN = 'modal-open';\n  var CLASS_NAME_FADE$3 = 'fade';\n  var CLASS_NAME_SHOW$4 = 'show';\n  var CLASS_NAME_STATIC = 'modal-static';\n  var OPEN_SELECTOR$1 = '.modal.show';\n  var SELECTOR_DIALOG = '.modal-dialog';\n  var SELECTOR_MODAL_BODY = '.modal-body';\n  var SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle=\"modal\"]';\n  var Default$6 = {\n    backdrop: true,\n    focus: true,\n    keyboard: true\n  };\n  var DefaultType$6 = {\n    backdrop: '(boolean|string)',\n    focus: 'boolean',\n    keyboard: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  var Modal = /*#__PURE__*/function (_BaseComponent6) {\n    _inherits(Modal, _BaseComponent6);\n\n    var _super10 = _createSuper(Modal);\n\n    function Modal(element, config) {\n      var _this23;\n\n      _classCallCheck(this, Modal);\n\n      _this23 = _super10.call(this, element, config);\n      _this23._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, _this23._element);\n      _this23._backdrop = _this23._initializeBackDrop();\n      _this23._focustrap = _this23._initializeFocusTrap();\n      _this23._isShown = false;\n      _this23._isTransitioning = false;\n      _this23._scrollBar = new ScrollBarHelper();\n\n      _this23._addEventListeners();\n\n      return _this23;\n    } // Getters\n\n\n    _createClass(Modal, [{\n      key: \"toggle\",\n      value: // Public\n      function toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n      }\n    }, {\n      key: \"show\",\n      value: function show(relatedTarget) {\n        var _this24 = this;\n\n        if (this._isShown || this._isTransitioning) {\n          return;\n        }\n\n        var showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, {\n          relatedTarget: relatedTarget\n        });\n\n        if (showEvent.defaultPrevented) {\n          return;\n        }\n\n        this._isShown = true;\n        this._isTransitioning = true;\n\n        this._scrollBar.hide();\n\n        document.body.classList.add(CLASS_NAME_OPEN);\n\n        this._adjustDialog();\n\n        this._backdrop.show(function () {\n          return _this24._showElement(relatedTarget);\n        });\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this25 = this;\n\n        if (!this._isShown || this._isTransitioning) {\n          return;\n        }\n\n        var hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4);\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        }\n\n        this._isShown = false;\n        this._isTransitioning = true;\n\n        this._focustrap.deactivate();\n\n        this._element.classList.remove(CLASS_NAME_SHOW$4);\n\n        this._queueCallback(function () {\n          return _this25._hideModal();\n        }, this._element, this._isAnimated());\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        EventHandler.off(window, EVENT_KEY$4);\n        EventHandler.off(this._dialog, EVENT_KEY$4);\n\n        this._backdrop.dispose();\n\n        this._focustrap.deactivate();\n\n        _get(_getPrototypeOf(Modal.prototype), \"dispose\", this).call(this);\n      }\n    }, {\n      key: \"handleUpdate\",\n      value: function handleUpdate() {\n        this._adjustDialog();\n      } // Private\n\n    }, {\n      key: \"_initializeBackDrop\",\n      value: function _initializeBackDrop() {\n        return new Backdrop({\n          isVisible: Boolean(this._config.backdrop),\n          // 'static' option will be translated to true, and booleans will keep their value,\n          isAnimated: this._isAnimated()\n        });\n      }\n    }, {\n      key: \"_initializeFocusTrap\",\n      value: function _initializeFocusTrap() {\n        return new FocusTrap({\n          trapElement: this._element\n        });\n      }\n    }, {\n      key: \"_showElement\",\n      value: function _showElement(relatedTarget) {\n        var _this26 = this;\n\n        // try to append dynamic modal\n        if (!document.body.contains(this._element)) {\n          document.body.append(this._element);\n        }\n\n        this._element.style.display = 'block';\n\n        this._element.removeAttribute('aria-hidden');\n\n        this._element.setAttribute('aria-modal', true);\n\n        this._element.setAttribute('role', 'dialog');\n\n        this._element.scrollTop = 0;\n        var modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);\n\n        if (modalBody) {\n          modalBody.scrollTop = 0;\n        }\n\n        reflow(this._element);\n\n        this._element.classList.add(CLASS_NAME_SHOW$4);\n\n        var transitionComplete = function transitionComplete() {\n          if (_this26._config.focus) {\n            _this26._focustrap.activate();\n          }\n\n          _this26._isTransitioning = false;\n          EventHandler.trigger(_this26._element, EVENT_SHOWN$4, {\n            relatedTarget: relatedTarget\n          });\n        };\n\n        this._queueCallback(transitionComplete, this._dialog, this._isAnimated());\n      }\n    }, {\n      key: \"_addEventListeners\",\n      value: function _addEventListeners() {\n        var _this27 = this;\n\n        EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, function (event) {\n          if (event.key !== ESCAPE_KEY$1) {\n            return;\n          }\n\n          if (_this27._config.keyboard) {\n            _this27.hide();\n\n            return;\n          }\n\n          _this27._triggerBackdropTransition();\n        });\n        EventHandler.on(window, EVENT_RESIZE$1, function () {\n          if (_this27._isShown && !_this27._isTransitioning) {\n            _this27._adjustDialog();\n          }\n        });\n        EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, function (event) {\n          // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n          EventHandler.one(_this27._element, EVENT_CLICK_DISMISS, function (event2) {\n            if (_this27._element !== event.target || _this27._element !== event2.target) {\n              return;\n            }\n\n            if (_this27._config.backdrop === 'static') {\n              _this27._triggerBackdropTransition();\n\n              return;\n            }\n\n            if (_this27._config.backdrop) {\n              _this27.hide();\n            }\n          });\n        });\n      }\n    }, {\n      key: \"_hideModal\",\n      value: function _hideModal() {\n        var _this28 = this;\n\n        this._element.style.display = 'none';\n\n        this._element.setAttribute('aria-hidden', true);\n\n        this._element.removeAttribute('aria-modal');\n\n        this._element.removeAttribute('role');\n\n        this._isTransitioning = false;\n\n        this._backdrop.hide(function () {\n          document.body.classList.remove(CLASS_NAME_OPEN);\n\n          _this28._resetAdjustments();\n\n          _this28._scrollBar.reset();\n\n          EventHandler.trigger(_this28._element, EVENT_HIDDEN$4);\n        });\n      }\n    }, {\n      key: \"_isAnimated\",\n      value: function _isAnimated() {\n        return this._element.classList.contains(CLASS_NAME_FADE$3);\n      }\n    }, {\n      key: \"_triggerBackdropTransition\",\n      value: function _triggerBackdropTransition() {\n        var _this29 = this;\n\n        var hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED$1);\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        }\n\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n        var initialOverflowY = this._element.style.overflowY; // return if the following background transition hasn't yet completed\n\n        if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n          return;\n        }\n\n        if (!isModalOverflowing) {\n          this._element.style.overflowY = 'hidden';\n        }\n\n        this._element.classList.add(CLASS_NAME_STATIC);\n\n        this._queueCallback(function () {\n          _this29._element.classList.remove(CLASS_NAME_STATIC);\n\n          _this29._queueCallback(function () {\n            _this29._element.style.overflowY = initialOverflowY;\n          }, _this29._dialog);\n        }, this._dialog);\n\n        this._element.focus();\n      }\n      /**\n       * The following methods are used to handle overflowing modals\n       */\n\n    }, {\n      key: \"_adjustDialog\",\n      value: function _adjustDialog() {\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n        var scrollbarWidth = this._scrollBar.getWidth();\n\n        var isBodyOverflowing = scrollbarWidth > 0;\n\n        if (isBodyOverflowing && !isModalOverflowing) {\n          var property = isRTL() ? 'paddingLeft' : 'paddingRight';\n          this._element.style[property] = \"\".concat(scrollbarWidth, \"px\");\n        }\n\n        if (!isBodyOverflowing && isModalOverflowing) {\n          var _property = isRTL() ? 'paddingRight' : 'paddingLeft';\n\n          this._element.style[_property] = \"\".concat(scrollbarWidth, \"px\");\n        }\n      }\n    }, {\n      key: \"_resetAdjustments\",\n      value: function _resetAdjustments() {\n        this._element.style.paddingLeft = '';\n        this._element.style.paddingRight = '';\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$6;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$6;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$7;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n          var data = Modal.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config](relatedTarget);\n        });\n      }\n    }]);\n\n    return Modal;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {\n    var _this30 = this;\n\n    var target = SelectorEngine.getElementFromSelector(this);\n\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    EventHandler.one(target, EVENT_SHOW$4, function (showEvent) {\n      if (showEvent.defaultPrevented) {\n        // only register focus restorer if modal will actually get shown\n        return;\n      }\n\n      EventHandler.one(target, EVENT_HIDDEN$4, function () {\n        if (isVisible(_this30)) {\n          _this30.focus();\n        }\n      });\n    }); // avoid conflict when clicking modal toggler while another one is open\n\n    var alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);\n\n    if (alreadyOpen) {\n      Modal.getInstance(alreadyOpen).hide();\n    }\n\n    var data = Modal.getOrCreateInstance(target);\n    data.toggle(this);\n  });\n  enableDismissTrigger(Modal);\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Modal);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap offcanvas.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$6 = 'offcanvas';\n  var DATA_KEY$3 = 'bs.offcanvas';\n  var EVENT_KEY$3 = \".\".concat(DATA_KEY$3);\n  var DATA_API_KEY$1 = '.data-api';\n  var EVENT_LOAD_DATA_API$2 = \"load\".concat(EVENT_KEY$3).concat(DATA_API_KEY$1);\n  var ESCAPE_KEY = 'Escape';\n  var CLASS_NAME_SHOW$3 = 'show';\n  var CLASS_NAME_SHOWING$1 = 'showing';\n  var CLASS_NAME_HIDING = 'hiding';\n  var CLASS_NAME_BACKDROP = 'offcanvas-backdrop';\n  var OPEN_SELECTOR = '.offcanvas.show';\n  var EVENT_SHOW$3 = \"show\".concat(EVENT_KEY$3);\n  var EVENT_SHOWN$3 = \"shown\".concat(EVENT_KEY$3);\n  var EVENT_HIDE$3 = \"hide\".concat(EVENT_KEY$3);\n  var EVENT_HIDE_PREVENTED = \"hidePrevented\".concat(EVENT_KEY$3);\n  var EVENT_HIDDEN$3 = \"hidden\".concat(EVENT_KEY$3);\n  var EVENT_RESIZE = \"resize\".concat(EVENT_KEY$3);\n  var EVENT_CLICK_DATA_API$1 = \"click\".concat(EVENT_KEY$3).concat(DATA_API_KEY$1);\n  var EVENT_KEYDOWN_DISMISS = \"keydown.dismiss\".concat(EVENT_KEY$3);\n  var SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle=\"offcanvas\"]';\n  var Default$5 = {\n    backdrop: true,\n    keyboard: true,\n    scroll: false\n  };\n  var DefaultType$5 = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    scroll: 'boolean'\n  };\n  /**\n   * Class definition\n   */\n\n  var Offcanvas = /*#__PURE__*/function (_BaseComponent7) {\n    _inherits(Offcanvas, _BaseComponent7);\n\n    var _super11 = _createSuper(Offcanvas);\n\n    function Offcanvas(element, config) {\n      var _this31;\n\n      _classCallCheck(this, Offcanvas);\n\n      _this31 = _super11.call(this, element, config);\n      _this31._isShown = false;\n      _this31._backdrop = _this31._initializeBackDrop();\n      _this31._focustrap = _this31._initializeFocusTrap();\n\n      _this31._addEventListeners();\n\n      return _this31;\n    } // Getters\n\n\n    _createClass(Offcanvas, [{\n      key: \"toggle\",\n      value: // Public\n      function toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n      }\n    }, {\n      key: \"show\",\n      value: function show(relatedTarget) {\n        var _this32 = this;\n\n        if (this._isShown) {\n          return;\n        }\n\n        var showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {\n          relatedTarget: relatedTarget\n        });\n\n        if (showEvent.defaultPrevented) {\n          return;\n        }\n\n        this._isShown = true;\n\n        this._backdrop.show();\n\n        if (!this._config.scroll) {\n          new ScrollBarHelper().hide();\n        }\n\n        this._element.setAttribute('aria-modal', true);\n\n        this._element.setAttribute('role', 'dialog');\n\n        this._element.classList.add(CLASS_NAME_SHOWING$1);\n\n        var completeCallBack = function completeCallBack() {\n          if (!_this32._config.scroll || _this32._config.backdrop) {\n            _this32._focustrap.activate();\n          }\n\n          _this32._element.classList.add(CLASS_NAME_SHOW$3);\n\n          _this32._element.classList.remove(CLASS_NAME_SHOWING$1);\n\n          EventHandler.trigger(_this32._element, EVENT_SHOWN$3, {\n            relatedTarget: relatedTarget\n          });\n        };\n\n        this._queueCallback(completeCallBack, this._element, true);\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this33 = this;\n\n        if (!this._isShown) {\n          return;\n        }\n\n        var hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        }\n\n        this._focustrap.deactivate();\n\n        this._element.blur();\n\n        this._isShown = false;\n\n        this._element.classList.add(CLASS_NAME_HIDING);\n\n        this._backdrop.hide();\n\n        var completeCallback = function completeCallback() {\n          _this33._element.classList.remove(CLASS_NAME_SHOW$3, CLASS_NAME_HIDING);\n\n          _this33._element.removeAttribute('aria-modal');\n\n          _this33._element.removeAttribute('role');\n\n          if (!_this33._config.scroll) {\n            new ScrollBarHelper().reset();\n          }\n\n          EventHandler.trigger(_this33._element, EVENT_HIDDEN$3);\n        };\n\n        this._queueCallback(completeCallback, this._element, true);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this._backdrop.dispose();\n\n        this._focustrap.deactivate();\n\n        _get(_getPrototypeOf(Offcanvas.prototype), \"dispose\", this).call(this);\n      } // Private\n\n    }, {\n      key: \"_initializeBackDrop\",\n      value: function _initializeBackDrop() {\n        var _this34 = this;\n\n        var clickCallback = function clickCallback() {\n          if (_this34._config.backdrop === 'static') {\n            EventHandler.trigger(_this34._element, EVENT_HIDE_PREVENTED);\n            return;\n          }\n\n          _this34.hide();\n        }; // 'static' option will be translated to true, and booleans will keep their value\n\n\n        var isVisible = Boolean(this._config.backdrop);\n        return new Backdrop({\n          className: CLASS_NAME_BACKDROP,\n          isVisible: isVisible,\n          isAnimated: true,\n          rootElement: this._element.parentNode,\n          clickCallback: isVisible ? clickCallback : null\n        });\n      }\n    }, {\n      key: \"_initializeFocusTrap\",\n      value: function _initializeFocusTrap() {\n        return new FocusTrap({\n          trapElement: this._element\n        });\n      }\n    }, {\n      key: \"_addEventListeners\",\n      value: function _addEventListeners() {\n        var _this35 = this;\n\n        EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, function (event) {\n          if (event.key !== ESCAPE_KEY) {\n            return;\n          }\n\n          if (_this35._config.keyboard) {\n            _this35.hide();\n\n            return;\n          }\n\n          EventHandler.trigger(_this35._element, EVENT_HIDE_PREVENTED);\n        });\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$5;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$5;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$6;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Offcanvas.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config](this);\n        });\n      }\n    }]);\n\n    return Offcanvas;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {\n    var _this36 = this;\n\n    var target = SelectorEngine.getElementFromSelector(this);\n\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    if (isDisabled(this)) {\n      return;\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN$3, function () {\n      // focus on trigger when it is closed\n      if (isVisible(_this36)) {\n        _this36.focus();\n      }\n    }); // avoid conflict when clicking a toggler of an offcanvas, while another is open\n\n    var alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);\n\n    if (alreadyOpen && alreadyOpen !== target) {\n      Offcanvas.getInstance(alreadyOpen).hide();\n    }\n\n    var data = Offcanvas.getOrCreateInstance(target);\n    data.toggle(this);\n  });\n  EventHandler.on(window, EVENT_LOAD_DATA_API$2, function () {\n    var _iterator17 = _createForOfIteratorHelper(SelectorEngine.find(OPEN_SELECTOR)),\n        _step17;\n\n    try {\n      for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n        var selector = _step17.value;\n        Offcanvas.getOrCreateInstance(selector).show();\n      }\n    } catch (err) {\n      _iterator17.e(err);\n    } finally {\n      _iterator17.f();\n    }\n  });\n  EventHandler.on(window, EVENT_RESIZE, function () {\n    var _iterator18 = _createForOfIteratorHelper(SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')),\n        _step18;\n\n    try {\n      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n        var element = _step18.value;\n\n        if (getComputedStyle(element).position !== 'fixed') {\n          Offcanvas.getOrCreateInstance(element).hide();\n        }\n      }\n    } catch (err) {\n      _iterator18.e(err);\n    } finally {\n      _iterator18.f();\n    }\n  });\n  enableDismissTrigger(Offcanvas);\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Offcanvas);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/sanitizer.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  // js-docs-start allow-list\n\n  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\n  var DefaultAllowlist = {\n    // Global attributes allowed on any supplied element below.\n    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n    a: ['target', 'href', 'title', 'rel'],\n    area: [],\n    b: [],\n    br: [],\n    col: [],\n    code: [],\n    dd: [],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    hr: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    i: [],\n    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n    li: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    u: [],\n    ul: []\n  }; // js-docs-end allow-list\n\n  var uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);\n  /**\n   * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n   * contexts.\n   *\n   * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n   */\n\n  var SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i;\n\n  var allowedAttribute = function allowedAttribute(attribute, allowedAttributeList) {\n    var attributeName = attribute.nodeName.toLowerCase();\n\n    if (allowedAttributeList.includes(attributeName)) {\n      if (uriAttributes.has(attributeName)) {\n        return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue));\n      }\n\n      return true;\n    } // Check if a regular expression validates the attribute.\n\n\n    return allowedAttributeList.filter(function (attributeRegex) {\n      return attributeRegex instanceof RegExp;\n    }).some(function (regex) {\n      return regex.test(attributeName);\n    });\n  };\n\n  function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n    var _ref18;\n\n    if (!unsafeHtml.length) {\n      return unsafeHtml;\n    }\n\n    if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n      return sanitizeFunction(unsafeHtml);\n    }\n\n    var domParser = new window.DOMParser();\n    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n\n    var elements = (_ref18 = []).concat.apply(_ref18, _toConsumableArray(createdDocument.body.querySelectorAll('*')));\n\n    var _iterator19 = _createForOfIteratorHelper(elements),\n        _step19;\n\n    try {\n      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n        var _ref19;\n\n        var element = _step19.value;\n        var elementName = element.nodeName.toLowerCase();\n\n        if (!Object.keys(allowList).includes(elementName)) {\n          element.remove();\n          continue;\n        }\n\n        var attributeList = (_ref19 = []).concat.apply(_ref19, _toConsumableArray(element.attributes));\n\n        var allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);\n\n        var _iterator20 = _createForOfIteratorHelper(attributeList),\n            _step20;\n\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var attribute = _step20.value;\n\n            if (!allowedAttribute(attribute, allowedAttributes)) {\n              element.removeAttribute(attribute.nodeName);\n            }\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n      }\n    } catch (err) {\n      _iterator19.e(err);\n    } finally {\n      _iterator19.f();\n    }\n\n    return createdDocument.body.innerHTML;\n  }\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap util/template-factory.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$5 = 'TemplateFactory';\n  var Default$4 = {\n    allowList: DefaultAllowlist,\n    content: {},\n    // { selector : text ,  selector2 : text2 , }\n    extraClass: '',\n    html: false,\n    sanitize: true,\n    sanitizeFn: null,\n    template: '<div></div>'\n  };\n  var DefaultType$4 = {\n    allowList: 'object',\n    content: 'object',\n    extraClass: '(string|function)',\n    html: 'boolean',\n    sanitize: 'boolean',\n    sanitizeFn: '(null|function)',\n    template: 'string'\n  };\n  var DefaultContentType = {\n    entry: '(string|element|function|null)',\n    selector: '(string|element)'\n  };\n  /**\n   * Class definition\n   */\n\n  var TemplateFactory = /*#__PURE__*/function (_Config5) {\n    _inherits(TemplateFactory, _Config5);\n\n    var _super12 = _createSuper(TemplateFactory);\n\n    function TemplateFactory(config) {\n      var _this37;\n\n      _classCallCheck(this, TemplateFactory);\n\n      _this37 = _super12.call(this);\n      _this37._config = _this37._getConfig(config);\n      return _this37;\n    } // Getters\n\n\n    _createClass(TemplateFactory, [{\n      key: \"getContent\",\n      value: // Public\n      function getContent() {\n        var _this38 = this;\n\n        return Object.values(this._config.content).map(function (config) {\n          return _this38._resolvePossibleFunction(config);\n        }).filter(Boolean);\n      }\n    }, {\n      key: \"hasContent\",\n      value: function hasContent() {\n        return this.getContent().length > 0;\n      }\n    }, {\n      key: \"changeContent\",\n      value: function changeContent(content) {\n        this._checkContent(content);\n\n        this._config.content = _objectSpread(_objectSpread({}, this._config.content), content);\n        return this;\n      }\n    }, {\n      key: \"toHtml\",\n      value: function toHtml() {\n        var templateWrapper = document.createElement('div');\n        templateWrapper.innerHTML = this._maybeSanitize(this._config.template);\n\n        for (var _i7 = 0, _Object$entries5 = Object.entries(this._config.content); _i7 < _Object$entries5.length; _i7++) {\n          var _ref22 = _Object$entries5[_i7];\n\n          var _ref21 = _slicedToArray(_ref22, 2);\n\n          var selector = _ref21[0];\n          var text = _ref21[1];\n\n          this._setContent(templateWrapper, text, selector);\n        }\n\n        var template = templateWrapper.children[0];\n\n        var extraClass = this._resolvePossibleFunction(this._config.extraClass);\n\n        if (extraClass) {\n          var _template$classList;\n\n          (_template$classList = template.classList).add.apply(_template$classList, _toConsumableArray(extraClass.split(' ')));\n        }\n\n        return template;\n      } // Private\n\n    }, {\n      key: \"_typeCheckConfig\",\n      value: function _typeCheckConfig(config) {\n        _get(_getPrototypeOf(TemplateFactory.prototype), \"_typeCheckConfig\", this).call(this, config);\n\n        this._checkContent(config.content);\n      }\n    }, {\n      key: \"_checkContent\",\n      value: function _checkContent(arg) {\n        for (var _i8 = 0, _Object$entries6 = Object.entries(arg); _i8 < _Object$entries6.length; _i8++) {\n          var _ref25 = _Object$entries6[_i8];\n\n          var _ref24 = _slicedToArray(_ref25, 2);\n\n          var selector = _ref24[0];\n          var content = _ref24[1];\n\n          _get(_getPrototypeOf(TemplateFactory.prototype), \"_typeCheckConfig\", this).call(this, {\n            selector: selector,\n            entry: content\n          }, DefaultContentType);\n        }\n      }\n    }, {\n      key: \"_setContent\",\n      value: function _setContent(template, content, selector) {\n        var templateElement = SelectorEngine.findOne(selector, template);\n\n        if (!templateElement) {\n          return;\n        }\n\n        content = this._resolvePossibleFunction(content);\n\n        if (!content) {\n          templateElement.remove();\n          return;\n        }\n\n        if (isElement(content)) {\n          this._putElementInTemplate(getElement(content), templateElement);\n\n          return;\n        }\n\n        if (this._config.html) {\n          templateElement.innerHTML = this._maybeSanitize(content);\n          return;\n        }\n\n        templateElement.textContent = content;\n      }\n    }, {\n      key: \"_maybeSanitize\",\n      value: function _maybeSanitize(arg) {\n        return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;\n      }\n    }, {\n      key: \"_resolvePossibleFunction\",\n      value: function _resolvePossibleFunction(arg) {\n        return execute(arg, [undefined, this]);\n      }\n    }, {\n      key: \"_putElementInTemplate\",\n      value: function _putElementInTemplate(element, templateElement) {\n        if (this._config.html) {\n          templateElement.innerHTML = '';\n          templateElement.append(element);\n          return;\n        }\n\n        templateElement.textContent = element.textContent;\n      }\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$4;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$4;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$5;\n      }\n    }]);\n\n    return TemplateFactory;\n  }(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap tooltip.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  var NAME$4 = 'tooltip';\n  var DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);\n  var CLASS_NAME_FADE$2 = 'fade';\n  var CLASS_NAME_MODAL = 'modal';\n  var CLASS_NAME_SHOW$2 = 'show';\n  var SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\n  var SELECTOR_MODAL = \".\".concat(CLASS_NAME_MODAL);\n  var EVENT_MODAL_HIDE = 'hide.bs.modal';\n  var TRIGGER_HOVER = 'hover';\n  var TRIGGER_FOCUS = 'focus';\n  var TRIGGER_CLICK = 'click';\n  var TRIGGER_MANUAL = 'manual';\n  var EVENT_HIDE$2 = 'hide';\n  var EVENT_HIDDEN$2 = 'hidden';\n  var EVENT_SHOW$2 = 'show';\n  var EVENT_SHOWN$2 = 'shown';\n  var EVENT_INSERTED = 'inserted';\n  var EVENT_CLICK$1 = 'click';\n  var EVENT_FOCUSIN$1 = 'focusin';\n  var EVENT_FOCUSOUT$1 = 'focusout';\n  var EVENT_MOUSEENTER = 'mouseenter';\n  var EVENT_MOUSELEAVE = 'mouseleave';\n  var AttachmentMap = {\n    AUTO: 'auto',\n    TOP: 'top',\n    RIGHT: isRTL() ? 'left' : 'right',\n    BOTTOM: 'bottom',\n    LEFT: isRTL() ? 'right' : 'left'\n  };\n  var Default$3 = {\n    allowList: DefaultAllowlist,\n    animation: true,\n    boundary: 'clippingParents',\n    container: false,\n    customClass: '',\n    delay: 0,\n    fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n    html: false,\n    offset: [0, 6],\n    placement: 'top',\n    popperConfig: null,\n    sanitize: true,\n    sanitizeFn: null,\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n    title: '',\n    trigger: 'hover focus'\n  };\n  var DefaultType$3 = {\n    allowList: 'object',\n    animation: 'boolean',\n    boundary: '(string|element)',\n    container: '(string|element|boolean)',\n    customClass: '(string|function)',\n    delay: '(number|object)',\n    fallbackPlacements: 'array',\n    html: 'boolean',\n    offset: '(array|string|function)',\n    placement: '(string|function)',\n    popperConfig: '(null|object|function)',\n    sanitize: 'boolean',\n    sanitizeFn: '(null|function)',\n    selector: '(string|boolean)',\n    template: 'string',\n    title: '(string|element|function)',\n    trigger: 'string'\n  };\n  /**\n   * Class definition\n   */\n\n  var Tooltip = /*#__PURE__*/function (_BaseComponent8) {\n    _inherits(Tooltip, _BaseComponent8);\n\n    var _super13 = _createSuper(Tooltip);\n\n    function Tooltip(element, config) {\n      var _this39;\n\n      _classCallCheck(this, Tooltip);\n\n      if (typeof Popper__namespace === 'undefined') {\n        throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org/docs/v2/)');\n      }\n\n      _this39 = _super13.call(this, element, config); // Private\n\n      _this39._isEnabled = true;\n      _this39._timeout = 0;\n      _this39._isHovered = null;\n      _this39._activeTrigger = {};\n      _this39._popper = null;\n      _this39._templateFactory = null;\n      _this39._newContent = null; // Protected\n\n      _this39.tip = null;\n\n      _this39._setListeners();\n\n      if (!_this39._config.selector) {\n        _this39._fixTitle();\n      }\n\n      return _this39;\n    } // Getters\n\n\n    _createClass(Tooltip, [{\n      key: \"enable\",\n      value: // Public\n      function enable() {\n        this._isEnabled = true;\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        this._isEnabled = false;\n      }\n    }, {\n      key: \"toggleEnabled\",\n      value: function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle() {\n        if (!this._isEnabled) {\n          return;\n        }\n\n        if (this._isShown()) {\n          this._leave();\n\n          return;\n        }\n\n        this._enter();\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        clearTimeout(this._timeout);\n        EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n\n        if (this._element.getAttribute('data-bs-original-title')) {\n          this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'));\n        }\n\n        this._disposePopper();\n\n        _get(_getPrototypeOf(Tooltip.prototype), \"dispose\", this).call(this);\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        var _this40 = this;\n\n        if (this._element.style.display === 'none') {\n          throw new Error('Please use show on visible elements');\n        }\n\n        if (!(this._isWithContent() && this._isEnabled)) {\n          return;\n        }\n\n        var showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW$2));\n        var shadowRoot = findShadowRoot(this._element);\n\n        var isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);\n\n        if (showEvent.defaultPrevented || !isInTheDom) {\n          return;\n        } // TODO: v6 remove this or make it optional\n\n\n        this._disposePopper();\n\n        var tip = this._getTipElement();\n\n        this._element.setAttribute('aria-describedby', tip.getAttribute('id'));\n\n        var container = this._config.container;\n\n        if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n          container.append(tip);\n          EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));\n        }\n\n        this._popper = this._createPopper(tip);\n        tip.classList.add(CLASS_NAME_SHOW$2); // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n        if ('ontouchstart' in document.documentElement) {\n          var _ref26;\n\n          var _iterator21 = _createForOfIteratorHelper((_ref26 = []).concat.apply(_ref26, _toConsumableArray(document.body.children))),\n              _step21;\n\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var element = _step21.value;\n              EventHandler.on(element, 'mouseover', noop);\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n        }\n\n        var complete = function complete() {\n          EventHandler.trigger(_this40._element, _this40.constructor.eventName(EVENT_SHOWN$2));\n\n          if (_this40._isHovered === false) {\n            _this40._leave();\n          }\n\n          _this40._isHovered = false;\n        };\n\n        this._queueCallback(complete, this.tip, this._isAnimated());\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this41 = this;\n\n        if (!this._isShown()) {\n          return;\n        }\n\n        var hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE$2));\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        }\n\n        var tip = this._getTipElement();\n\n        tip.classList.remove(CLASS_NAME_SHOW$2); // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n\n        if ('ontouchstart' in document.documentElement) {\n          var _ref27;\n\n          var _iterator22 = _createForOfIteratorHelper((_ref27 = []).concat.apply(_ref27, _toConsumableArray(document.body.children))),\n              _step22;\n\n          try {\n            for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n              var element = _step22.value;\n              EventHandler.off(element, 'mouseover', noop);\n            }\n          } catch (err) {\n            _iterator22.e(err);\n          } finally {\n            _iterator22.f();\n          }\n        }\n\n        this._activeTrigger[TRIGGER_CLICK] = false;\n        this._activeTrigger[TRIGGER_FOCUS] = false;\n        this._activeTrigger[TRIGGER_HOVER] = false;\n        this._isHovered = null; // it is a trick to support manual triggering\n\n        var complete = function complete() {\n          if (_this41._isWithActiveTrigger()) {\n            return;\n          }\n\n          if (!_this41._isHovered) {\n            _this41._disposePopper();\n          }\n\n          _this41._element.removeAttribute('aria-describedby');\n\n          EventHandler.trigger(_this41._element, _this41.constructor.eventName(EVENT_HIDDEN$2));\n        };\n\n        this._queueCallback(complete, this.tip, this._isAnimated());\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        if (this._popper) {\n          this._popper.update();\n        }\n      } // Protected\n\n    }, {\n      key: \"_isWithContent\",\n      value: function _isWithContent() {\n        return Boolean(this._getTitle());\n      }\n    }, {\n      key: \"_getTipElement\",\n      value: function _getTipElement() {\n        if (!this.tip) {\n          this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());\n        }\n\n        return this.tip;\n      }\n    }, {\n      key: \"_createTipElement\",\n      value: function _createTipElement(content) {\n        var tip = this._getTemplateFactory(content).toHtml(); // TODO: remove this check in v6\n\n\n        if (!tip) {\n          return null;\n        }\n\n        tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2); // TODO: v6 the following can be achieved with CSS only\n\n        tip.classList.add(\"bs-\".concat(this.constructor.NAME, \"-auto\"));\n        var tipId = getUID(this.constructor.NAME).toString();\n        tip.setAttribute('id', tipId);\n\n        if (this._isAnimated()) {\n          tip.classList.add(CLASS_NAME_FADE$2);\n        }\n\n        return tip;\n      }\n    }, {\n      key: \"setContent\",\n      value: function setContent(content) {\n        this._newContent = content;\n\n        if (this._isShown()) {\n          this._disposePopper();\n\n          this.show();\n        }\n      }\n    }, {\n      key: \"_getTemplateFactory\",\n      value: function _getTemplateFactory(content) {\n        if (this._templateFactory) {\n          this._templateFactory.changeContent(content);\n        } else {\n          this._templateFactory = new TemplateFactory(_objectSpread(_objectSpread({}, this._config), {}, {\n            // the `content` var has to be after `this._config`\n            // to override config.content in case of popover\n            content: content,\n            extraClass: this._resolvePossibleFunction(this._config.customClass)\n          }));\n        }\n\n        return this._templateFactory;\n      }\n    }, {\n      key: \"_getContentForTemplate\",\n      value: function _getContentForTemplate() {\n        return _defineProperty({}, SELECTOR_TOOLTIP_INNER, this._getTitle());\n      }\n    }, {\n      key: \"_getTitle\",\n      value: function _getTitle() {\n        return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title');\n      } // Private\n\n    }, {\n      key: \"_initializeOnDelegatedTarget\",\n      value: function _initializeOnDelegatedTarget(event) {\n        return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());\n      }\n    }, {\n      key: \"_isAnimated\",\n      value: function _isAnimated() {\n        return this._config.animation || this.tip && this.tip.classList.contains(CLASS_NAME_FADE$2);\n      }\n    }, {\n      key: \"_isShown\",\n      value: function _isShown() {\n        return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW$2);\n      }\n    }, {\n      key: \"_createPopper\",\n      value: function _createPopper(tip) {\n        var placement = execute(this._config.placement, [this, tip, this._element]);\n        var attachment = AttachmentMap[placement.toUpperCase()];\n        return Popper__namespace.createPopper(this._element, tip, this._getPopperConfig(attachment));\n      }\n    }, {\n      key: \"_getOffset\",\n      value: function _getOffset() {\n        var _this42 = this;\n\n        var offset = this._config.offset;\n\n        if (typeof offset === 'string') {\n          return offset.split(',').map(function (value) {\n            return Number.parseInt(value, 10);\n          });\n        }\n\n        if (typeof offset === 'function') {\n          return function (popperData) {\n            return offset(popperData, _this42._element);\n          };\n        }\n\n        return offset;\n      }\n    }, {\n      key: \"_resolvePossibleFunction\",\n      value: function _resolvePossibleFunction(arg) {\n        return execute(arg, [this._element, this._element]);\n      }\n    }, {\n      key: \"_getPopperConfig\",\n      value: function _getPopperConfig(attachment) {\n        var _this43 = this;\n\n        var defaultBsPopperConfig = {\n          placement: attachment,\n          modifiers: [{\n            name: 'flip',\n            options: {\n              fallbackPlacements: this._config.fallbackPlacements\n            }\n          }, {\n            name: 'offset',\n            options: {\n              offset: this._getOffset()\n            }\n          }, {\n            name: 'preventOverflow',\n            options: {\n              boundary: this._config.boundary\n            }\n          }, {\n            name: 'arrow',\n            options: {\n              element: \".\".concat(this.constructor.NAME, \"-arrow\")\n            }\n          }, {\n            name: 'preSetPlacement',\n            enabled: true,\n            phase: 'beforeMain',\n            fn: function fn(data) {\n              // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n              // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n              _this43._getTipElement().setAttribute('data-popper-placement', data.state.placement);\n            }\n          }]\n        };\n        return _objectSpread(_objectSpread({}, defaultBsPopperConfig), execute(this._config.popperConfig, [undefined, defaultBsPopperConfig]));\n      }\n    }, {\n      key: \"_setListeners\",\n      value: function _setListeners() {\n        var _this44 = this;\n\n        var triggers = this._config.trigger.split(' ');\n\n        var _iterator23 = _createForOfIteratorHelper(triggers),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var trigger = _step23.value;\n\n            if (trigger === 'click') {\n              EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK$1), this._config.selector, function (event) {\n                var context = _this44._initializeOnDelegatedTarget(event);\n\n                context._activeTrigger[TRIGGER_CLICK] = !(context._isShown() && context._activeTrigger[TRIGGER_CLICK]);\n                context.toggle();\n              });\n            } else if (trigger !== TRIGGER_MANUAL) {\n              var eventIn = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSEENTER) : this.constructor.eventName(EVENT_FOCUSIN$1);\n              var eventOut = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSELEAVE) : this.constructor.eventName(EVENT_FOCUSOUT$1);\n              EventHandler.on(this._element, eventIn, this._config.selector, function (event) {\n                var context = _this44._initializeOnDelegatedTarget(event);\n\n                context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;\n\n                context._enter();\n              });\n              EventHandler.on(this._element, eventOut, this._config.selector, function (event) {\n                var context = _this44._initializeOnDelegatedTarget(event);\n\n                context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);\n\n                context._leave();\n              });\n            }\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n\n        this._hideModalHandler = function () {\n          if (_this44._element) {\n            _this44.hide();\n          }\n        };\n\n        EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n      }\n    }, {\n      key: \"_fixTitle\",\n      value: function _fixTitle() {\n        var title = this._element.getAttribute('title');\n\n        if (!title) {\n          return;\n        }\n\n        if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n          this._element.setAttribute('aria-label', title);\n        }\n\n        this._element.setAttribute('data-bs-original-title', title); // DO NOT USE IT. Is only for backwards compatibility\n\n\n        this._element.removeAttribute('title');\n      }\n    }, {\n      key: \"_enter\",\n      value: function _enter() {\n        var _this45 = this;\n\n        if (this._isShown() || this._isHovered) {\n          this._isHovered = true;\n          return;\n        }\n\n        this._isHovered = true;\n\n        this._setTimeout(function () {\n          if (_this45._isHovered) {\n            _this45.show();\n          }\n        }, this._config.delay.show);\n      }\n    }, {\n      key: \"_leave\",\n      value: function _leave() {\n        var _this46 = this;\n\n        if (this._isWithActiveTrigger()) {\n          return;\n        }\n\n        this._isHovered = false;\n\n        this._setTimeout(function () {\n          if (!_this46._isHovered) {\n            _this46.hide();\n          }\n        }, this._config.delay.hide);\n      }\n    }, {\n      key: \"_setTimeout\",\n      value: function _setTimeout(handler, timeout) {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(handler, timeout);\n      }\n    }, {\n      key: \"_isWithActiveTrigger\",\n      value: function _isWithActiveTrigger() {\n        return Object.values(this._activeTrigger).includes(true);\n      }\n    }, {\n      key: \"_getConfig\",\n      value: function _getConfig(config) {\n        var dataAttributes = Manipulator.getDataAttributes(this._element);\n\n        for (var _i9 = 0, _Object$keys2 = Object.keys(dataAttributes); _i9 < _Object$keys2.length; _i9++) {\n          var dataAttribute = _Object$keys2[_i9];\n\n          if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n            delete dataAttributes[dataAttribute];\n          }\n        }\n\n        config = _objectSpread(_objectSpread({}, dataAttributes), _typeof(config) === 'object' && config ? config : {});\n        config = this._mergeConfigObj(config);\n        config = this._configAfterMerge(config);\n\n        this._typeCheckConfig(config);\n\n        return config;\n      }\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        config.container = config.container === false ? document.body : getElement(config.container);\n\n        if (typeof config.delay === 'number') {\n          config.delay = {\n            show: config.delay,\n            hide: config.delay\n          };\n        }\n\n        if (typeof config.title === 'number') {\n          config.title = config.title.toString();\n        }\n\n        if (typeof config.content === 'number') {\n          config.content = config.content.toString();\n        }\n\n        return config;\n      }\n    }, {\n      key: \"_getDelegateConfig\",\n      value: function _getDelegateConfig() {\n        var config = {};\n\n        for (var _i10 = 0, _Object$entries7 = Object.entries(this._config); _i10 < _Object$entries7.length; _i10++) {\n          var _ref31 = _Object$entries7[_i10];\n\n          var _ref30 = _slicedToArray(_ref31, 2);\n\n          var key = _ref30[0];\n          var value = _ref30[1];\n\n          if (this.constructor.Default[key] !== value) {\n            config[key] = value;\n          }\n        }\n\n        config.selector = false;\n        config.trigger = 'manual'; // In the future can be replaced with:\n        // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n        // `Object.fromEntries(keysWithDifferentValues)`\n\n        return config;\n      }\n    }, {\n      key: \"_disposePopper\",\n      value: function _disposePopper() {\n        if (this._popper) {\n          this._popper.destroy();\n\n          this._popper = null;\n        }\n\n        if (this.tip) {\n          this.tip.remove();\n          this.tip = null;\n        }\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$3;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$3;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$4;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Tooltip.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config]();\n        });\n      }\n    }]);\n\n    return Tooltip;\n  }(BaseComponent);\n  /**\n   * jQuery\n   */\n\n\n  defineJQueryPlugin(Tooltip);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap popover.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$3 = 'popover';\n  var SELECTOR_TITLE = '.popover-header';\n  var SELECTOR_CONTENT = '.popover-body';\n\n  var Default$2 = _objectSpread(_objectSpread({}, Tooltip.Default), {}, {\n    content: '',\n    offset: [0, 8],\n    placement: 'right',\n    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div>' + '</div>',\n    trigger: 'click'\n  });\n\n  var DefaultType$2 = _objectSpread(_objectSpread({}, Tooltip.DefaultType), {}, {\n    content: '(null|string|element|function)'\n  });\n  /**\n   * Class definition\n   */\n\n\n  var Popover = /*#__PURE__*/function (_Tooltip) {\n    _inherits(Popover, _Tooltip);\n\n    var _super14 = _createSuper(Popover);\n\n    function Popover() {\n      _classCallCheck(this, Popover);\n\n      return _super14.apply(this, arguments);\n    }\n\n    _createClass(Popover, [{\n      key: \"_isWithContent\",\n      value: // Overrides\n      function _isWithContent() {\n        return this._getTitle() || this._getContent();\n      } // Private\n\n    }, {\n      key: \"_getContentForTemplate\",\n      value: function _getContentForTemplate() {\n        var _ref32;\n\n        return _ref32 = {}, _defineProperty(_ref32, SELECTOR_TITLE, this._getTitle()), _defineProperty(_ref32, SELECTOR_CONTENT, this._getContent()), _ref32;\n      }\n    }, {\n      key: \"_getContent\",\n      value: function _getContent() {\n        return this._resolvePossibleFunction(this._config.content);\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: // Getters\n      function get() {\n        return Default$2;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$2;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$3;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Popover.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config]();\n        });\n      }\n    }]);\n\n    return Popover;\n  }(Tooltip);\n  /**\n   * jQuery\n   */\n\n\n  defineJQueryPlugin(Popover);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap scrollspy.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$2 = 'scrollspy';\n  var DATA_KEY$2 = 'bs.scrollspy';\n  var EVENT_KEY$2 = \".\".concat(DATA_KEY$2);\n  var DATA_API_KEY = '.data-api';\n  var EVENT_ACTIVATE = \"activate\".concat(EVENT_KEY$2);\n  var EVENT_CLICK = \"click\".concat(EVENT_KEY$2);\n  var EVENT_LOAD_DATA_API$1 = \"load\".concat(EVENT_KEY$2).concat(DATA_API_KEY);\n  var CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\n  var CLASS_NAME_ACTIVE$1 = 'active';\n  var SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]';\n  var SELECTOR_TARGET_LINKS = '[href]';\n  var SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\n  var SELECTOR_NAV_LINKS = '.nav-link';\n  var SELECTOR_NAV_ITEMS = '.nav-item';\n  var SELECTOR_LIST_ITEMS = '.list-group-item';\n  var SELECTOR_LINK_ITEMS = \"\".concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_NAV_ITEMS, \" > \").concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_LIST_ITEMS);\n  var SELECTOR_DROPDOWN = '.dropdown';\n  var SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';\n  var Default$1 = {\n    offset: null,\n    // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n    rootMargin: '0px 0px -25%',\n    smoothScroll: false,\n    target: null,\n    threshold: [0.1, 0.5, 1]\n  };\n  var DefaultType$1 = {\n    offset: '(number|null)',\n    // TODO v6 @deprecated, keep it for backwards compatibility reasons\n    rootMargin: 'string',\n    smoothScroll: 'boolean',\n    target: 'element',\n    threshold: 'array'\n  };\n  /**\n   * Class definition\n   */\n\n  var ScrollSpy = /*#__PURE__*/function (_BaseComponent9) {\n    _inherits(ScrollSpy, _BaseComponent9);\n\n    var _super15 = _createSuper(ScrollSpy);\n\n    function ScrollSpy(element, config) {\n      var _this47;\n\n      _classCallCheck(this, ScrollSpy);\n\n      _this47 = _super15.call(this, element, config); // this._element is the observablesContainer and config.target the menu links wrapper\n\n      _this47._targetLinks = new Map();\n      _this47._observableSections = new Map();\n      _this47._rootElement = getComputedStyle(_this47._element).overflowY === 'visible' ? null : _this47._element;\n      _this47._activeTarget = null;\n      _this47._observer = null;\n      _this47._previousScrollData = {\n        visibleEntryTop: 0,\n        parentScrollTop: 0\n      };\n\n      _this47.refresh(); // initialize\n\n\n      return _this47;\n    } // Getters\n\n\n    _createClass(ScrollSpy, [{\n      key: \"refresh\",\n      value: // Public\n      function refresh() {\n        this._initializeTargetsAndObservables();\n\n        this._maybeEnableSmoothScroll();\n\n        if (this._observer) {\n          this._observer.disconnect();\n        } else {\n          this._observer = this._getNewObserver();\n        }\n\n        var _iterator24 = _createForOfIteratorHelper(this._observableSections.values()),\n            _step24;\n\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var section = _step24.value;\n\n            this._observer.observe(section);\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this._observer.disconnect();\n\n        _get(_getPrototypeOf(ScrollSpy.prototype), \"dispose\", this).call(this);\n      } // Private\n\n    }, {\n      key: \"_configAfterMerge\",\n      value: function _configAfterMerge(config) {\n        // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n        config.target = getElement(config.target) || document.body; // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n\n        config.rootMargin = config.offset ? \"\".concat(config.offset, \"px 0px -30%\") : config.rootMargin;\n\n        if (typeof config.threshold === 'string') {\n          config.threshold = config.threshold.split(',').map(function (value) {\n            return Number.parseFloat(value);\n          });\n        }\n\n        return config;\n      }\n    }, {\n      key: \"_maybeEnableSmoothScroll\",\n      value: function _maybeEnableSmoothScroll() {\n        var _this48 = this;\n\n        if (!this._config.smoothScroll) {\n          return;\n        } // unregister any previous listeners\n\n\n        EventHandler.off(this._config.target, EVENT_CLICK);\n        EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, function (event) {\n          var observableSection = _this48._observableSections.get(event.target.hash);\n\n          if (observableSection) {\n            event.preventDefault();\n            var root = _this48._rootElement || window;\n            var height = observableSection.offsetTop - _this48._element.offsetTop;\n\n            if (root.scrollTo) {\n              root.scrollTo({\n                top: height,\n                behavior: 'smooth'\n              });\n              return;\n            } // Chrome 60 doesn't support `scrollTo`\n\n\n            root.scrollTop = height;\n          }\n        });\n      }\n    }, {\n      key: \"_getNewObserver\",\n      value: function _getNewObserver() {\n        var _this49 = this;\n\n        var options = {\n          root: this._rootElement,\n          threshold: this._config.threshold,\n          rootMargin: this._config.rootMargin\n        };\n        return new IntersectionObserver(function (entries) {\n          return _this49._observerCallback(entries);\n        }, options);\n      } // The logic of selection\n\n    }, {\n      key: \"_observerCallback\",\n      value: function _observerCallback(entries) {\n        var _this50 = this;\n\n        var targetElement = function targetElement(entry) {\n          return _this50._targetLinks.get(\"#\".concat(entry.target.id));\n        };\n\n        var activate = function activate(entry) {\n          _this50._previousScrollData.visibleEntryTop = entry.target.offsetTop;\n\n          _this50._process(targetElement(entry));\n        };\n\n        var parentScrollTop = (this._rootElement || document.documentElement).scrollTop;\n        var userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;\n        this._previousScrollData.parentScrollTop = parentScrollTop;\n\n        var _iterator25 = _createForOfIteratorHelper(entries),\n            _step25;\n\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var entry = _step25.value;\n\n            if (!entry.isIntersecting) {\n              this._activeTarget = null;\n\n              this._clearActiveClass(targetElement(entry));\n\n              continue;\n            }\n\n            var entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop; // if we are scrolling down, pick the bigger offsetTop\n\n            if (userScrollsDown && entryIsLowerThanPrevious) {\n              activate(entry); // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n\n              if (!parentScrollTop) {\n                return;\n              }\n\n              continue;\n            } // if we are scrolling up, pick the smallest offsetTop\n\n\n            if (!userScrollsDown && !entryIsLowerThanPrevious) {\n              activate(entry);\n            }\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n      }\n    }, {\n      key: \"_initializeTargetsAndObservables\",\n      value: function _initializeTargetsAndObservables() {\n        this._targetLinks = new Map();\n        this._observableSections = new Map();\n        var targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);\n\n        var _iterator26 = _createForOfIteratorHelper(targetLinks),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var anchor = _step26.value;\n\n            // ensure that the anchor has an id and is not disabled\n            if (!anchor.hash || isDisabled(anchor)) {\n              continue;\n            }\n\n            var observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element); // ensure that the observableSection exists & is visible\n\n            if (isVisible(observableSection)) {\n              this._targetLinks.set(decodeURI(anchor.hash), anchor);\n\n              this._observableSections.set(anchor.hash, observableSection);\n            }\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n      }\n    }, {\n      key: \"_process\",\n      value: function _process(target) {\n        if (this._activeTarget === target) {\n          return;\n        }\n\n        this._clearActiveClass(this._config.target);\n\n        this._activeTarget = target;\n        target.classList.add(CLASS_NAME_ACTIVE$1);\n\n        this._activateParents(target);\n\n        EventHandler.trigger(this._element, EVENT_ACTIVATE, {\n          relatedTarget: target\n        });\n      }\n    }, {\n      key: \"_activateParents\",\n      value: function _activateParents(target) {\n        // Activate dropdown parents\n        if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n          SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE$1);\n          return;\n        }\n\n        var _iterator27 = _createForOfIteratorHelper(SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)),\n            _step27;\n\n        try {\n          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n            var listGroup = _step27.value;\n\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            var _iterator28 = _createForOfIteratorHelper(SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)),\n                _step28;\n\n            try {\n              for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                var item = _step28.value;\n                item.classList.add(CLASS_NAME_ACTIVE$1);\n              }\n            } catch (err) {\n              _iterator28.e(err);\n            } finally {\n              _iterator28.f();\n            }\n          }\n        } catch (err) {\n          _iterator27.e(err);\n        } finally {\n          _iterator27.f();\n        }\n      }\n    }, {\n      key: \"_clearActiveClass\",\n      value: function _clearActiveClass(parent) {\n        parent.classList.remove(CLASS_NAME_ACTIVE$1);\n        var activeNodes = SelectorEngine.find(\"\".concat(SELECTOR_TARGET_LINKS, \".\").concat(CLASS_NAME_ACTIVE$1), parent);\n\n        var _iterator29 = _createForOfIteratorHelper(activeNodes),\n            _step29;\n\n        try {\n          for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n            var node = _step29.value;\n            node.classList.remove(CLASS_NAME_ACTIVE$1);\n          }\n        } catch (err) {\n          _iterator29.e(err);\n        } finally {\n          _iterator29.f();\n        }\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default$1;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType$1;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME$2;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = ScrollSpy.getOrCreateInstance(this, config);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config]();\n        });\n      }\n    }]);\n\n    return ScrollSpy;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(window, EVENT_LOAD_DATA_API$1, function () {\n    var _iterator30 = _createForOfIteratorHelper(SelectorEngine.find(SELECTOR_DATA_SPY)),\n        _step30;\n\n    try {\n      for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n        var spy = _step30.value;\n        ScrollSpy.getOrCreateInstance(spy);\n      }\n    } catch (err) {\n      _iterator30.e(err);\n    } finally {\n      _iterator30.f();\n    }\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(ScrollSpy);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap tab.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME$1 = 'tab';\n  var DATA_KEY$1 = 'bs.tab';\n  var EVENT_KEY$1 = \".\".concat(DATA_KEY$1);\n  var EVENT_HIDE$1 = \"hide\".concat(EVENT_KEY$1);\n  var EVENT_HIDDEN$1 = \"hidden\".concat(EVENT_KEY$1);\n  var EVENT_SHOW$1 = \"show\".concat(EVENT_KEY$1);\n  var EVENT_SHOWN$1 = \"shown\".concat(EVENT_KEY$1);\n  var EVENT_CLICK_DATA_API = \"click\".concat(EVENT_KEY$1);\n  var EVENT_KEYDOWN = \"keydown\".concat(EVENT_KEY$1);\n  var EVENT_LOAD_DATA_API = \"load\".concat(EVENT_KEY$1);\n  var ARROW_LEFT_KEY = 'ArrowLeft';\n  var ARROW_RIGHT_KEY = 'ArrowRight';\n  var ARROW_UP_KEY = 'ArrowUp';\n  var ARROW_DOWN_KEY = 'ArrowDown';\n  var HOME_KEY = 'Home';\n  var END_KEY = 'End';\n  var CLASS_NAME_ACTIVE = 'active';\n  var CLASS_NAME_FADE$1 = 'fade';\n  var CLASS_NAME_SHOW$1 = 'show';\n  var CLASS_DROPDOWN = 'dropdown';\n  var SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\n  var SELECTOR_DROPDOWN_MENU = '.dropdown-menu';\n  var NOT_SELECTOR_DROPDOWN_TOGGLE = \":not(\".concat(SELECTOR_DROPDOWN_TOGGLE, \")\");\n  var SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]';\n  var SELECTOR_OUTER = '.nav-item, .list-group-item';\n  var SELECTOR_INNER = \".nav-link\".concat(NOT_SELECTOR_DROPDOWN_TOGGLE, \", .list-group-item\").concat(NOT_SELECTOR_DROPDOWN_TOGGLE, \", [role=\\\"tab\\\"]\").concat(NOT_SELECTOR_DROPDOWN_TOGGLE);\n  var SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]'; // TODO: could only be `tab` in v6\n\n  var SELECTOR_INNER_ELEM = \"\".concat(SELECTOR_INNER, \", \").concat(SELECTOR_DATA_TOGGLE);\n  var SELECTOR_DATA_TOGGLE_ACTIVE = \".\".concat(CLASS_NAME_ACTIVE, \"[data-bs-toggle=\\\"tab\\\"], .\").concat(CLASS_NAME_ACTIVE, \"[data-bs-toggle=\\\"pill\\\"], .\").concat(CLASS_NAME_ACTIVE, \"[data-bs-toggle=\\\"list\\\"]\");\n  /**\n   * Class definition\n   */\n\n  var Tab = /*#__PURE__*/function (_BaseComponent10) {\n    _inherits(Tab, _BaseComponent10);\n\n    var _super16 = _createSuper(Tab);\n\n    function Tab(element) {\n      var _this51;\n\n      _classCallCheck(this, Tab);\n\n      _this51 = _super16.call(this, element);\n      _this51._parent = _this51._element.closest(SELECTOR_TAB_PANEL);\n\n      if (!_this51._parent) {\n        return _possibleConstructorReturn(_this51); // TODO: should throw exception in v6\n        // throw new TypeError(`${element.outerHTML} has not a valid parent ${SELECTOR_INNER_ELEM}`)\n      } // Set up initial aria attributes\n\n\n      _this51._setInitialAttributes(_this51._parent, _this51._getChildren());\n\n      EventHandler.on(_this51._element, EVENT_KEYDOWN, function (event) {\n        return _this51._keydown(event);\n      });\n      return _this51;\n    } // Getters\n\n\n    _createClass(Tab, [{\n      key: \"show\",\n      value: // Public\n      function show() {\n        // Shows this elem and deactivate the active sibling if exists\n        var innerElem = this._element;\n\n        if (this._elemIsActive(innerElem)) {\n          return;\n        } // Search for active tab on same parent to deactivate it\n\n\n        var active = this._getActiveElem();\n\n        var hideEvent = active ? EventHandler.trigger(active, EVENT_HIDE$1, {\n          relatedTarget: innerElem\n        }) : null;\n        var showEvent = EventHandler.trigger(innerElem, EVENT_SHOW$1, {\n          relatedTarget: active\n        });\n\n        if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) {\n          return;\n        }\n\n        this._deactivate(active, innerElem);\n\n        this._activate(innerElem, active);\n      } // Private\n\n    }, {\n      key: \"_activate\",\n      value: function _activate(element, relatedElem) {\n        var _this52 = this;\n\n        if (!element) {\n          return;\n        }\n\n        element.classList.add(CLASS_NAME_ACTIVE);\n\n        this._activate(SelectorEngine.getElementFromSelector(element)); // Search and activate/show the proper section\n\n\n        var complete = function complete() {\n          if (element.getAttribute('role') !== 'tab') {\n            element.classList.add(CLASS_NAME_SHOW$1);\n            return;\n          }\n\n          element.removeAttribute('tabindex');\n          element.setAttribute('aria-selected', true);\n\n          _this52._toggleDropDown(element, true);\n\n          EventHandler.trigger(element, EVENT_SHOWN$1, {\n            relatedTarget: relatedElem\n          });\n        };\n\n        this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n      }\n    }, {\n      key: \"_deactivate\",\n      value: function _deactivate(element, relatedElem) {\n        var _this53 = this;\n\n        if (!element) {\n          return;\n        }\n\n        element.classList.remove(CLASS_NAME_ACTIVE);\n        element.blur();\n\n        this._deactivate(SelectorEngine.getElementFromSelector(element)); // Search and deactivate the shown section too\n\n\n        var complete = function complete() {\n          if (element.getAttribute('role') !== 'tab') {\n            element.classList.remove(CLASS_NAME_SHOW$1);\n            return;\n          }\n\n          element.setAttribute('aria-selected', false);\n          element.setAttribute('tabindex', '-1');\n\n          _this53._toggleDropDown(element, false);\n\n          EventHandler.trigger(element, EVENT_HIDDEN$1, {\n            relatedTarget: relatedElem\n          });\n        };\n\n        this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n      }\n    }, {\n      key: \"_keydown\",\n      value: function _keydown(event) {\n        if (![ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key)) {\n          return;\n        }\n\n        event.stopPropagation(); // stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n\n        event.preventDefault();\n\n        var children = this._getChildren().filter(function (element) {\n          return !isDisabled(element);\n        });\n\n        var nextActiveElement;\n\n        if ([HOME_KEY, END_KEY].includes(event.key)) {\n          nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1];\n        } else {\n          var isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key);\n          nextActiveElement = getNextActiveElement(children, event.target, isNext, true);\n        }\n\n        if (nextActiveElement) {\n          nextActiveElement.focus({\n            preventScroll: true\n          });\n          Tab.getOrCreateInstance(nextActiveElement).show();\n        }\n      }\n    }, {\n      key: \"_getChildren\",\n      value: function _getChildren() {\n        // collection of inner elements\n        return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent);\n      }\n    }, {\n      key: \"_getActiveElem\",\n      value: function _getActiveElem() {\n        var _this54 = this;\n\n        return this._getChildren().find(function (child) {\n          return _this54._elemIsActive(child);\n        }) || null;\n      }\n    }, {\n      key: \"_setInitialAttributes\",\n      value: function _setInitialAttributes(parent, children) {\n        this._setAttributeIfNotExists(parent, 'role', 'tablist');\n\n        var _iterator31 = _createForOfIteratorHelper(children),\n            _step31;\n\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var child = _step31.value;\n\n            this._setInitialAttributesOnChild(child);\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n      }\n    }, {\n      key: \"_setInitialAttributesOnChild\",\n      value: function _setInitialAttributesOnChild(child) {\n        child = this._getInnerElement(child);\n\n        var isActive = this._elemIsActive(child);\n\n        var outerElem = this._getOuterElement(child);\n\n        child.setAttribute('aria-selected', isActive);\n\n        if (outerElem !== child) {\n          this._setAttributeIfNotExists(outerElem, 'role', 'presentation');\n        }\n\n        if (!isActive) {\n          child.setAttribute('tabindex', '-1');\n        }\n\n        this._setAttributeIfNotExists(child, 'role', 'tab'); // set attributes to the related panel too\n\n\n        this._setInitialAttributesOnTargetPanel(child);\n      }\n    }, {\n      key: \"_setInitialAttributesOnTargetPanel\",\n      value: function _setInitialAttributesOnTargetPanel(child) {\n        var target = SelectorEngine.getElementFromSelector(child);\n\n        if (!target) {\n          return;\n        }\n\n        this._setAttributeIfNotExists(target, 'role', 'tabpanel');\n\n        if (child.id) {\n          this._setAttributeIfNotExists(target, 'aria-labelledby', \"\".concat(child.id));\n        }\n      }\n    }, {\n      key: \"_toggleDropDown\",\n      value: function _toggleDropDown(element, open) {\n        var outerElem = this._getOuterElement(element);\n\n        if (!outerElem.classList.contains(CLASS_DROPDOWN)) {\n          return;\n        }\n\n        var toggle = function toggle(selector, className) {\n          var element = SelectorEngine.findOne(selector, outerElem);\n\n          if (element) {\n            element.classList.toggle(className, open);\n          }\n        };\n\n        toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE);\n        toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW$1);\n        outerElem.setAttribute('aria-expanded', open);\n      }\n    }, {\n      key: \"_setAttributeIfNotExists\",\n      value: function _setAttributeIfNotExists(element, attribute, value) {\n        if (!element.hasAttribute(attribute)) {\n          element.setAttribute(attribute, value);\n        }\n      }\n    }, {\n      key: \"_elemIsActive\",\n      value: function _elemIsActive(elem) {\n        return elem.classList.contains(CLASS_NAME_ACTIVE);\n      } // Try to get the inner element (usually the .nav-link)\n\n    }, {\n      key: \"_getInnerElement\",\n      value: function _getInnerElement(elem) {\n        return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem);\n      } // Try to get the outer element (usually the .nav-item)\n\n    }, {\n      key: \"_getOuterElement\",\n      value: function _getOuterElement(elem) {\n        return elem.closest(SELECTOR_OUTER) || elem;\n      } // Static\n\n    }], [{\n      key: \"NAME\",\n      get: function get() {\n        return NAME$1;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Tab.getOrCreateInstance(this);\n\n          if (typeof config !== 'string') {\n            return;\n          }\n\n          if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n            throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n          }\n\n          data[config]();\n        });\n      }\n    }]);\n\n    return Tab;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    if (isDisabled(this)) {\n      return;\n    }\n\n    Tab.getOrCreateInstance(this).show();\n  });\n  /**\n   * Initialize on focus\n   */\n\n  EventHandler.on(window, EVENT_LOAD_DATA_API, function () {\n    var _iterator32 = _createForOfIteratorHelper(SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)),\n        _step32;\n\n    try {\n      for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n        var element = _step32.value;\n        Tab.getOrCreateInstance(element);\n      }\n    } catch (err) {\n      _iterator32.e(err);\n    } finally {\n      _iterator32.f();\n    }\n  });\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Tab);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap toast.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  var NAME = 'toast';\n  var DATA_KEY = 'bs.toast';\n  var EVENT_KEY = \".\".concat(DATA_KEY);\n  var EVENT_MOUSEOVER = \"mouseover\".concat(EVENT_KEY);\n  var EVENT_MOUSEOUT = \"mouseout\".concat(EVENT_KEY);\n  var EVENT_FOCUSIN = \"focusin\".concat(EVENT_KEY);\n  var EVENT_FOCUSOUT = \"focusout\".concat(EVENT_KEY);\n  var EVENT_HIDE = \"hide\".concat(EVENT_KEY);\n  var EVENT_HIDDEN = \"hidden\".concat(EVENT_KEY);\n  var EVENT_SHOW = \"show\".concat(EVENT_KEY);\n  var EVENT_SHOWN = \"shown\".concat(EVENT_KEY);\n  var CLASS_NAME_FADE = 'fade';\n  var CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility\n\n  var CLASS_NAME_SHOW = 'show';\n  var CLASS_NAME_SHOWING = 'showing';\n  var DefaultType = {\n    animation: 'boolean',\n    autohide: 'boolean',\n    delay: 'number'\n  };\n  var Default = {\n    animation: true,\n    autohide: true,\n    delay: 5000\n  };\n  /**\n   * Class definition\n   */\n\n  var Toast = /*#__PURE__*/function (_BaseComponent11) {\n    _inherits(Toast, _BaseComponent11);\n\n    var _super17 = _createSuper(Toast);\n\n    function Toast(element, config) {\n      var _this55;\n\n      _classCallCheck(this, Toast);\n\n      _this55 = _super17.call(this, element, config);\n      _this55._timeout = null;\n      _this55._hasMouseInteraction = false;\n      _this55._hasKeyboardInteraction = false;\n\n      _this55._setListeners();\n\n      return _this55;\n    } // Getters\n\n\n    _createClass(Toast, [{\n      key: \"show\",\n      value: // Public\n      function show() {\n        var _this56 = this;\n\n        var showEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n\n        if (showEvent.defaultPrevented) {\n          return;\n        }\n\n        this._clearTimeout();\n\n        if (this._config.animation) {\n          this._element.classList.add(CLASS_NAME_FADE);\n        }\n\n        var complete = function complete() {\n          _this56._element.classList.remove(CLASS_NAME_SHOWING);\n\n          EventHandler.trigger(_this56._element, EVENT_SHOWN);\n\n          _this56._maybeScheduleHide();\n        };\n\n        this._element.classList.remove(CLASS_NAME_HIDE); // @deprecated\n\n\n        reflow(this._element);\n\n        this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING);\n\n        this._queueCallback(complete, this._element, this._config.animation);\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        var _this57 = this;\n\n        if (!this.isShown()) {\n          return;\n        }\n\n        var hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n\n        if (hideEvent.defaultPrevented) {\n          return;\n        }\n\n        var complete = function complete() {\n          _this57._element.classList.add(CLASS_NAME_HIDE); // @deprecated\n\n\n          _this57._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW);\n\n          EventHandler.trigger(_this57._element, EVENT_HIDDEN);\n        };\n\n        this._element.classList.add(CLASS_NAME_SHOWING);\n\n        this._queueCallback(complete, this._element, this._config.animation);\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this._clearTimeout();\n\n        if (this.isShown()) {\n          this._element.classList.remove(CLASS_NAME_SHOW);\n        }\n\n        _get(_getPrototypeOf(Toast.prototype), \"dispose\", this).call(this);\n      }\n    }, {\n      key: \"isShown\",\n      value: function isShown() {\n        return this._element.classList.contains(CLASS_NAME_SHOW);\n      } // Private\n\n    }, {\n      key: \"_maybeScheduleHide\",\n      value: function _maybeScheduleHide() {\n        var _this58 = this;\n\n        if (!this._config.autohide) {\n          return;\n        }\n\n        if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n          return;\n        }\n\n        this._timeout = setTimeout(function () {\n          _this58.hide();\n        }, this._config.delay);\n      }\n    }, {\n      key: \"_onInteraction\",\n      value: function _onInteraction(event, isInteracting) {\n        switch (event.type) {\n          case 'mouseover':\n          case 'mouseout':\n            {\n              this._hasMouseInteraction = isInteracting;\n              break;\n            }\n\n          case 'focusin':\n          case 'focusout':\n            {\n              this._hasKeyboardInteraction = isInteracting;\n              break;\n            }\n        }\n\n        if (isInteracting) {\n          this._clearTimeout();\n\n          return;\n        }\n\n        var nextElement = event.relatedTarget;\n\n        if (this._element === nextElement || this._element.contains(nextElement)) {\n          return;\n        }\n\n        this._maybeScheduleHide();\n      }\n    }, {\n      key: \"_setListeners\",\n      value: function _setListeners() {\n        var _this59 = this;\n\n        EventHandler.on(this._element, EVENT_MOUSEOVER, function (event) {\n          return _this59._onInteraction(event, true);\n        });\n        EventHandler.on(this._element, EVENT_MOUSEOUT, function (event) {\n          return _this59._onInteraction(event, false);\n        });\n        EventHandler.on(this._element, EVENT_FOCUSIN, function (event) {\n          return _this59._onInteraction(event, true);\n        });\n        EventHandler.on(this._element, EVENT_FOCUSOUT, function (event) {\n          return _this59._onInteraction(event, false);\n        });\n      }\n    }, {\n      key: \"_clearTimeout\",\n      value: function _clearTimeout() {\n        clearTimeout(this._timeout);\n        this._timeout = null;\n      } // Static\n\n    }], [{\n      key: \"Default\",\n      get: function get() {\n        return Default;\n      }\n    }, {\n      key: \"DefaultType\",\n      get: function get() {\n        return DefaultType;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        return NAME;\n      }\n    }, {\n      key: \"jQueryInterface\",\n      value: function jQueryInterface(config) {\n        return this.each(function () {\n          var data = Toast.getOrCreateInstance(this, config);\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\".concat(config, \"\\\"\"));\n            }\n\n            data[config](this);\n          }\n        });\n      }\n    }]);\n\n    return Toast;\n  }(BaseComponent);\n  /**\n   * Data API implementation\n   */\n\n\n  enableDismissTrigger(Toast);\n  /**\n   * jQuery\n   */\n\n  defineJQueryPlugin(Toast);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap index.umd.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var index_umd = {\n    Alert: Alert,\n    Button: Button,\n    Carousel: Carousel,\n    Collapse: Collapse,\n    Dropdown: Dropdown,\n    Modal: Modal,\n    Offcanvas: Offcanvas,\n    Popover: Popover,\n    ScrollSpy: ScrollSpy,\n    Tab: Tab,\n    Toast: Toast,\n    Tooltip: Tooltip\n  };\n  return index_umd;\n});","map":null,"metadata":{},"sourceType":"module"}